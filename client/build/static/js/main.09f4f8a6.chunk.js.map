{"version":3,"sources":["redux/auth/authTypes.js","redux/auth/authActions.js","redux/navbar/navbarTypes.js","redux/navbar/navbarActions.js","hooks/useHTTP.js","redux/bookmarks/bookmarksTypes.js","redux/bookmarks/bookmarksActions.js","components/Auth.js","redux/search/searchTypes.js","components/Navbar.js","redux/search/searchActions.js","imgs/undraw_in_sync_xwsa.svg","pages/MainPage.js","imgs/undraw_agreement_aajr.svg","imgs/undraw_Vehicle_sale_a645.svg","imgs/undraw_posting_photo_v65l.svg","imgs/undraw_suburbs_8b83.svg","imgs/undraw_Design_thinking_re_644h.svg","imgs/undraw_for_sale_viax.svg","imgs/undraw_heavy_box_agqi.svg","imgs/undraw_co-working_825n.svg","imgs/undraw_Cautious_dog_q83f.svg","imgs/undraw_eco_conscious_1y58.svg","hooks/useTags.js","pages/CategoriesPage.js","components/PageLoader.js","pages/AnnouncementsPage.js","components/Message.js","components/Question.js","components/Questions.js","pages/AnnouncementPage.js","imgs/undraw_data_trends_b0wg.svg","imgs/undraw_content_vbqo.svg","pages/ModPage.js","pages/UserPage.js","pages/UsersPage.js","pages/BookmarksPage.js","components/Routes.js","components/MainLoader.js","App.js","serviceWorker.js","redux/navbar/navbarReducer.js","redux/auth/authReducer.js","redux/search/searchReducer.js","redux/bookmarks/bookmarksReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["FETCH_START_AUTH","FETCH_SUCCESS_AUTH","FETCH_FAILURE_AUTH","SET_TOKEN_AUTH","SET_ERROR_AUTH","CLEAR_SPECIFIC_ERROR_AUTH","CLEAR_ERRORS_AUTH","CLEAR_DATA_AUTH","UPDATE_START_AUTH","UPDATE_SUCCESS_AUTH","UPDATE_FAILURE_AUTH","UPDATE_AVATAR_AUTH","fetchStart","type","fetchSuccess","auth","payload","fetchFailure","error","setError","item","clearSpecificError","clearErrors","updateStart","updateSuccess","user","updateFailure","errors","updateAvatar","ava","TOGGLE_DROPMENU_NAVBAR","TOGGLE_AUTH_FORM_NAVBAR","RESET_NAVBAR","TOGGLE_POPUP_WARNING_NAVBAR","TOGGLE_POPUP_IMAGE","toggleAuthForm","resetNavbar","useHTTP","token","useSelector","state","fetchData","useCallback","url","method","data","options","makeRequest","a","axios","headers","Authorization","res","isLocalStorage","dispatch","console","log","response","FETCH_SUCCESS_MARKS","ADD_BOOKMARK_MARKS","REMOVE_BOOKMARK_MARKS","bookmarks","addBookmark","announcement","removeBookmark","announcementId","Auth","useState","param","value","form","setForm","isLogin","setIsLogin","load","authForm","navbar","useDispatch","handleChange","e","map","target","name","handleSubmit","preventDefault","isError","forEach","username","email","password","fields","msg","err","getMsg","key","className","onChange","autoComplete","onClick","onSubmit","SET_TEXT_SEARCH","Navbar","props","dropMenu","search","setSearch","location","useLocation","history","useHistory","to","trim","length","pathname","push","placeholder","exact","activeClassName","typeUser","src","alt","MainPage","mainBgImage","useTags","icon","img","transport","house_garden","electronics","childrens_world","real_estate","spare_parts_for_transport","work","animals","business_services","fashion_style","CategoriesPage","tagsJSX","tag","PageLoader","fillColor","version","xmlns","xlinkHref","x","y","viewBox","enableBackground","fill","d","attributeName","attributeType","dur","from","repeatCount","AnnouncementsPage","setData","setLoad","text","tags","categoryName","match","params","useEffect","searchText","fetch","announcements","ad","_id","price","image","path","date","slice","title","getTitleProps","Message","message","isQuestion","owner","setNewAnswer","deleteHandler","dropReply","setDropReply","answer","setAnswer","content","question","handleDelete","msgId","moment","calendar","Question","isNewQuestion","deleteQuestion","answers","setAnswers","deleteAnswer","answerId","filter","answersJSX","answerNew","Questions","focus","questions","setQuestions","comment","setComment","questionId","messages","handleComment","ref","AnnouncementPage","images","useRef","includeBkmarks","setIncludeBkmarks","bkmarks","isInclude","getPreviewImage","statusPreview","handleBookmark","isCreate","imgTabs","id","handleMove","status","i","previewIndex","imagesJSX","getTagProps","current","description","ModPage","popupWarning","prevForm","Object","keys","files","isEmptyFields","isEmpty","fd","FormData","Array","prototype","call","file","append","set","tagName","multiple","entries","index","bgEditImage","bgCreateImage","UserPage","formLoad","popupImage","userId","setAnnouncements","statusPage","setStatusPage","reset","setReset","userOther","setUserOther","initialForm","firstname","lastname","address","phone","brief","contacts","userData","announceData","elem","getStatus","handleTab","announcementsJSX","announce","tagProps","btnTabs","pop","btnTabsJSX","btn","contactsJSX","UsersPage","handleRemoveUser","stopPropagation","users","BookmarksPage","handleRemove","announId","bookmarksJSX","Routes","component","MainLoader","App","setTimeout","Boolean","window","hostname","initialState","navbarReducer","action","authReducer","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","tokenNew","searchReducer","bookmarksReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qNAAaA,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAA4B,4BAC5BC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAqB,qBCIrBC,EAAa,WACxB,MAAO,CACLC,KAAMb,IAGGc,EAAe,SAACC,GAC3B,MAAO,CACLF,KAAMZ,EACNe,QAASD,IAGAE,EAAe,SAACC,GAC3B,MAAO,CACLL,KAAMX,EACNc,QAASE,IAGAC,EAAW,SAACC,GACvB,MAAO,CACLP,KAAMT,EACNY,QAASI,IAGAC,EAAqB,SAACD,GACjC,MAAO,CACLP,KAAMR,EACNW,QAASI,IAGAE,EAAc,WACzB,MAAO,CACLT,KAAMP,IAaGiB,EAAc,WACzB,MAAO,CACLV,KAAML,IAGGgB,EAAgB,SAACC,GAC5B,MAAO,CACLZ,KAAMJ,EACNO,QAASS,IAGAC,EAAgB,SAACC,GAC5B,MAAO,CACLd,KAAMH,EACNM,QAASW,IAGAC,EAAe,SAACC,GAC3B,MAAO,CACLhB,KAAMF,EACNK,QAASa,I,uDC/EAC,EAAyB,yBACzBC,EAA0B,0BAC1BC,EAAe,eACfC,EAA8B,8BAC9BC,EAAqB,qBCSrBC,EAAiB,WAC5B,MAAO,CACLtB,KAAMkB,IAGGK,EAAc,WACzB,MAAO,CACLvB,KAAMmB,IC6BKK,MA5Cf,WAAoB,IACVC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMzB,QAAvCuB,MAwCR,MAAO,CAAEG,UAtCSC,uBAChB,YAAqC,IAAlCC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACdC,EAAW,uCAAG,4BAAAC,EAAA,sEACAC,IAAM,CACtBN,MACAC,SACAC,OACAK,QAASZ,GAAS,CAChBa,cAAc,SAAD,OAAWb,EAAMA,UANhB,cACZc,EADY,yBASXA,EAAIP,MATO,2CAAH,qDAYjB,OAAIC,EAAQO,eACH,sBAAC,4BAAAL,EAAA,+EAEeD,IAFf,cAEEF,EAFF,yBAGGA,GAHH,uFAAD,GAOT,uCAAO,WAAOS,GAAP,eAAAN,EAAA,sEAEHF,EAAQlC,YAAc0C,EAASR,EAAQlC,cAFpC,SAGgBmC,IAHhB,OAGGF,EAHH,OAIHS,EAASR,EAAQhC,aAAa,CAAE+B,OAAMC,aACtCQ,EAASlB,KALN,gDAOHmB,QAAQC,IAAR,MACAV,EAAQ7B,cACNqC,EAASR,EAAQ7B,aAAa,KAAMwC,SAASZ,KAAKlB,SATjD,yDAAP,wDAaF,CAACW,MC3CQoB,EAAsB,sBACtBC,EAAqB,qBACrBC,EAAwB,wBCIxB9C,EAAe,SAAC+C,GAC3B,MAAO,CACLhD,KAAM6C,EACN1C,QAAS6C,IAGAC,EAAc,SAACC,GAC1B,MAAO,CACLlD,KAAM8C,EACN3C,QAAS+C,IAGAC,EAAiB,SAACC,GAC7B,MAAO,CACLpD,KAAM+C,EACN5C,QAASiD,I,uBC4IEC,OAlJf,WAAiB,IAAD,EACUC,mBAAS,CAC/B,CAAEC,MAAO,WAAYvD,KAAM,OAAQwD,MAAO,IAC1C,CAAED,MAAO,QAASvD,KAAM,QAASwD,MAAO,IACxC,CAAED,MAAO,WAAYvD,KAAM,WAAYwD,MAAO,MAJlC,mBACPC,EADO,KACDC,EADC,OAMgBJ,oBAAS,GANzB,mBAMPK,EANO,KAMEC,EANF,KAONhC,EAAcJ,IAAdI,UAPM,EAWVF,aAAY,SAACC,GAAD,OAAWA,KAXb,IASZzB,KAAQ2D,EATI,EASJA,KAAMxD,EATF,EASEA,MACJyD,EAVE,EAUZC,OAAUD,SAENrB,EAAWuB,cAEXC,EAAe,SAACC,GACpBR,EACED,EAAKU,KAAI,SAAC5D,GAKR,OAJIA,EAAKgD,QAAUW,EAAEE,OAAOC,OAC1B9D,EAAKiD,MAAQU,EAAEE,OAAOZ,MACtBf,EAASjC,EAAmBD,KAEvBA,OAoBP+D,EAAe,SAACJ,GACpBA,EAAEK,iBAEF,IAAIC,GAAU,EAUd,GATAf,EAAKgB,SAAQ,SAAClE,GACZ,IAAKA,EAAKiD,MAAO,CACf,GAAIG,GAA0B,aAAfpD,EAAKgD,MAClB,OAEFd,EAASnC,EAASC,IAClBiE,GAAU,OAGVA,EAAJ,CAb0B,kBAiBUf,EAjBV,GAiBnBiB,EAjBmB,KAiBTC,EAjBS,KAiBFC,EAjBE,KAkBpB5C,EAAO,CAAE2C,MAAOA,EAAMnB,MAAOoB,SAAUA,EAASpB,OAEtDf,EACEb,EAAU,CACRE,IAAI,SAAD,OAAW6B,EAAU,QAAU,YAClC5B,OAAQ,OACRC,KAAM2B,EAAO,eAAQ3B,GAAR,2BAAsBA,GAAtB,IAA4B0C,SAAUA,EAASlB,QAC5DvB,QAAS,CAAElC,aAAYE,eAAcG,qBAKrCyE,EAASpB,EAAKU,KAAI,SAAC5D,GACvB,IAAMuE,EAzCO,SAACvE,GACd,IAAIuE,EAAM,GAMV,OALAzE,EAAMoE,SAAQ,SAACM,GACTxE,EAAKgD,QAAUwB,EAAIxB,QACrBuB,EAAMC,EAAID,QAGPA,EAkCKE,CAAOzE,GACnB,OACE,2BACE0E,IAAK1E,EAAKgD,MACV2B,UAAS,gBACPvB,GAA0B,aAAfpD,EAAKgD,OAAwB,iBAG1C,yBAAK2B,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAKgD,MAApC,KACA,yBACE2B,UAAS,gCACNJ,GAAO,gCAGV,kBAAC,IAAD,CAAcI,UAAU,gBACxB,0BAAMA,UAAU,cACbJ,EACD,0BAAMI,UAAU,uBAItB,2BACEA,UAAS,uBAAkBJ,GAAO,yBAClC9E,KAAMO,EAAKP,KACXwD,MAAOjD,EAAKiD,MACZa,KAAM9D,EAAKgD,MACX4B,SAAUlB,EACVmB,aAAa,YAMrB,OACE,yBAAKF,UAAS,oBAAepB,GAAY,oBACvC,yBACEoB,UAAS,4BAAuBrB,GAAQ,8BAExC,yBAAKqB,UAAU,wBAEjB,4BACEA,UAAU,qBACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,IAAD,OAEF,wBAAI2D,UAAU,oBAAoBvB,EAAU,QAAU,YACtD,0BAAM2B,SAAUhB,EAAcY,UAAU,+BACrCL,EACD,4BAAQK,UAAU,4BAEpB,yBAAKA,UAAU,6BACb,4BAAQG,QAASf,EAAcY,UAAU,mBACtCvB,EACC,kBAAC,KAAD,CAAgBuB,UAAU,cAE1B,kBAAC,KAAD,CAAsBA,UAAU,cAElC,0BAAMA,UAAU,aAAavB,EAAU,UAAY,YAErD,4BAAQ0B,QA3GW,WACvBzB,GAAYD,GACZlB,EAAShC,MAyG8ByE,UAAU,kBAC1CvB,EACC,kBAAC,KAAD,CAAsBuB,UAAU,cAEhC,kBAAC,KAAD,CAAgBA,UAAU,cAE5B,0BAAMA,UAAU,aAAavB,EAAU,UAAY,e,2BC1JhD4B,GAAkB,kBC4KhBC,OAtJf,SAAgBC,GAAQ,IAAD,EAIjB/D,aAAY,SAACC,GAAD,OAAWA,KAFjBF,EAFW,EAEnBvB,KAAQuB,MAFW,IAGnBsC,OAAU2B,EAHS,EAGTA,SAAU5B,EAHD,EAGCA,SAEhBrB,EAAWuB,cALI,EAMOV,mBAAS,IANhB,mBAMdqC,EANc,KAMNC,EANM,KAOfC,EAAWC,cACXC,EAAUC,cAyBhB,OACE,yBAAKd,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEe,GAAG,IACHf,UAAU,2BACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,KAAD,CAAc2D,UAAU,cACxB,0BAAMA,UAAU,kBAAhB,aAGF,0BAAMI,SAzBS,SAACpB,IACpBA,EAAEK,iBACGoB,EAAOO,OAAOC,UAGnB1D,EAASlB,KACTkB,EC7CK,CACLzC,KAAMuF,GACNpF,QD2CiBwF,IACS,YAAtBE,EAASO,UAGbL,EAAQM,KAAK,aAeqBnB,UAAU,eACtC,2BACElF,KAAK,OACLwD,MAAOmC,EACPT,UAAU,oBACVC,SAxCW,SAACjB,GACpB0B,EAAU1B,EAAEE,OAAOZ,OACnBf,EAASlB,MAuCD+E,YAAY,SACZlB,aAAa,QAEf,4BAAQF,UAAU,mBAChB,kBAAC,KAAD,QAIJ,kBAAC,IAAD,CACEqB,OAAK,EACLN,GAAG,cACHO,gBAAgB,oBAChBtB,UAAU,YACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,KAAD,MACA,0BAAM2D,UAAU,kBAAhB,eAEF,kBAAC,IAAD,CACEe,GAAG,SACHO,gBAAgB,oBAChBtB,UAAU,YACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,KAAD,MACA,0BAAM2D,UAAU,kBAAhB,UAEDzD,EAAMb,MAAQa,EAAMb,KAAK6F,SACxB,oCACE,kBAAC,IAAD,CACER,GAAG,UACHO,gBAAgB,oBAChBtB,UAAU,YACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,KAAD,MACA,0BAAM2D,UAAU,kBAAhB,WAEF,yBAAKA,UAAU,uBACb,4BACEG,QAAS,kBAAM5C,ENxGtB,CACLzC,KAAMiB,KMwGMiE,UAAS,6BACPQ,GAAY,sBAGd,0BAAMR,UAAU,sBACd,yBACEA,UAAU,WACVwB,IAAKjF,EAAMb,KAAKI,IAChB2F,IAAI,eAGR,0BAAMzB,UAAU,kBAAkBzD,EAAMb,KAAK8D,WAE/C,yBACEQ,UAAS,yBACPQ,GAAY,yBAGd,kBAAC,IAAD,CACEO,GAAG,QACHM,OAAK,EACLC,gBAAgB,oBAChBtB,UAAU,YACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,KAAD,MACA,0BAAM2D,UAAU,kBAAhB,YAEF,kBAAC,IAAD,CACEe,GAAG,aACHO,gBAAgB,oBAChBtB,UAAU,YACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,IAAD,MACA,0BAAM2D,UAAU,kBAAhB,cAEF,4BAAQA,UAAU,YAAYG,QAlHvB,WACnB5C,ERiBK,CACLzC,KAAMN,IQjBN+C,EAASlB,OAiHK,kBAAC,KAAD,MACA,0BAAM2D,UAAU,kBAAhB,gBAMR,4BACEA,UAAS,oBAAepB,GAAY,qBACpCuB,QAAS,kBAAM5C,EAASnB,OAExB,kBAAC,KAAD,MACA,0BAAM4D,UAAU,kBAAhB,eEpKG,OAA0B,gDCsD1B0B,OA5Cf,SAAkBnB,GAAQ,IAChBhE,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMzB,QAAvCuB,MACFgB,EAAWuB,cASjB,OACE,yBAAKkB,UAAU,QACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,eACZ,kBAAC,KAAD,CAAcA,UAAU,eACxB,0BAAMA,UAAU,cAAhB,aAEF,uBAAGA,UAAU,mBAAb,+FAIA,yBAAKA,UAAU,wBACb,4BAAQG,QAvBO,WACnB5D,EAAMA,MACRgE,EAAMM,QAAQM,KAAK,WAEnB5D,EAASnB,MAmBgC4D,UAAU,mBAC3C,kBAAC,KAAD,CAAQA,UAAU,cAClB,0BAAMA,UAAU,aAAhB,aAEF,kBAAC,IAAD,CAAMe,GAAG,cAAcf,UAAU,YAC/B,kBAAC,KAAD,CAAwBA,UAAU,cAClC,0BAAMA,UAAU,aAAhB,iBAIN,yBAAKA,UAAU,gBACb,yBAAKwB,IAAKG,GAAa3B,UAAU,YAAYyB,IAAI,oB,kBC/C5C,OAA0B,kDCA1B,OAA0B,qDCA1B,OAA0B,sDCA1B,OAA0B,gDCA1B,OAA0B,2DCA1B,OAA0B,iDCA1B,OAA0B,kDCA1B,OAA0B,mDCA1B,OAA0B,qDCA1B,OAA0B,sDCwF1BG,OAjEf,WACE,MAAO,CACL,CACEvD,MAAO,YACPc,KAAM,YACN0C,KAAM,kBAAC,KAAD,CAAc7B,UAAU,cAC9B8B,IAAKC,IAEP,CACE1D,MAAO,eACPc,KAAM,mBACN0C,KAAM,kBAAC,KAAD,CAAc7B,UAAU,cAC9B8B,IAAKE,IAEP,CACE3D,MAAO,cACPc,KAAM,cACN0C,KAAM,kBAAC,KAAD,CAAiB7B,UAAU,cACjC8B,IAAKG,IAEP,CACE5D,MAAO,kBACPc,KAAM,mBACN0C,KAAM,kBAAC,KAAD,CAAe7B,UAAU,cAC/B8B,IAAKI,IAEP,CACE7D,MAAO,cACPc,KAAM,cACN0C,KAAM,kBAAC,KAAD,CAAa7B,UAAU,cAC7B8B,IAAKK,IAEP,CACE9D,MAAO,4BACPc,KAAM,4BACN0C,KAAM,kBAAC,KAAD,CAAa7B,UAAU,cAC7B8B,IAAKM,IAEP,CACE/D,MAAO,OACPc,KAAM,OACN0C,KAAM,kBAAC,KAAD,CAAY7B,UAAU,cAC5B8B,IAAKO,IAEP,CACEhE,MAAO,UACPc,KAAM,UACN0C,KAAM,kBAAC,KAAD,CAAO7B,UAAU,cACvB8B,IAAKQ,IAEP,CACEjE,MAAO,oBACPc,KAAM,wBACN0C,KAAM,kBAAC,KAAD,CAAgB7B,UAAU,cAChC8B,IAAKS,IAEP,CACElE,MAAO,gBACPc,KAAM,oBACN0C,KAAM,kBAAC,KAAD,CAAc7B,UAAU,cAC9B8B,IAAKU,MChDIC,OA9Bf,WACE,IACMC,EADOd,KACQ3C,KAAI,SAAC0D,GACxB,OACE,kBAAC,IAAD,CACE5B,GAAE,sBAAiB4B,EAAItE,OACvB0B,IAAK4C,EAAItE,MACT2B,UAAU,oBAEV,0BAAMA,UAAU,oBAAoB2C,EAAIxD,MACxC,yBAAKqC,IAAKmB,EAAIb,IAAK9B,UAAU,oBAAoByB,IAAI,oBAI3D,OACE,yBAAKzB,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,yBACb,kBAAC,KAAD,CAAwBA,UAAU,gBAClC,0BAAMA,UAAU,eAAhB,eAEF,0BAAMA,UAAU,sBAAhB,oCAIF,yBAAKA,UAAU,cAAc0C,KCkCpBE,OA9Df,WACE,IAAMC,EAAY,qBAClB,OACE,yBACEC,QAAQ,MACR9C,UAAU,cACV+C,MAAM,6BACNC,UAAU,+BACVC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,mBAEjB,0BACEC,KAAMR,EACNS,EAAE,kJAGF,sCACEC,cAAc,YACdC,cAAc,MACd1I,KAAK,SACL2I,IAAI,KACJC,KAAK,UACL3C,GAAG,YACH4C,YAAY,gBAGhB,0BACEN,KAAMR,EACNS,EAAE,2IAGF,sCACEC,cAAc,YACdC,cAAc,MACd1I,KAAK,SACL2I,IAAI,KACJC,KAAK,UACL3C,GAAG,aACH4C,YAAY,gBAGhB,0BACEN,KAAMR,EACNS,EAAE,sHAGF,sCACEC,cAAc,YACdC,cAAc,MACd1I,KAAK,SACL2I,IAAI,KACJC,KAAK,UACL3C,GAAG,YACH4C,YAAY,kBCwDPC,OAxGf,SAA2BrD,GAAQ,IAAD,EACRnC,mBAAS,IADD,mBACzBtB,EADyB,KACnB+G,EADmB,OAERzF,oBAAS,GAFD,mBAEzBO,EAFyB,KAEnBmF,EAFmB,KAGxBpH,EAAcJ,IAAdI,UACAqH,EAASvH,aAAY,SAACC,GAAD,OAAWA,EAAMgE,UAAtCsD,KACFC,EAAOpC,KACLqC,EAAiB1D,EAAM2D,MAAMC,OAA7BF,aAERG,qBAAU,YACG,uCAAG,4BAAAnH,EAAA,sEAEV6G,GAAQ,GAFE,SAGSpH,EAAU,CAC3BE,IAAKqH,EAAY,0CACsBA,GACnC,qCACJpH,OAAQoH,EAAe,MAAQ,OAC/BnH,KAAMmH,EAAe,KAAO,CAAEI,WAAYN,GAC1ChH,QAAS,CAAEO,gBAAgB,KATnB,OAGJR,EAHI,OAWV+G,EAAQ/G,GACRgH,GAAQ,GAZE,yGAAH,qDAeXQ,KACC,CAACL,EAAcvH,EAAWqH,IAE7B,IAAMQ,EACJzH,EAAKmE,QACLnE,EAAKmC,KAAI,SAACuF,GACR,OACE,kBAAC,IAAD,CAAMxE,UAAU,gBAAgBD,IAAKyE,EAAGC,IAAK1D,GAAE,mBAAcyD,EAAGC,MAC9D,yBAAKzE,UAAU,0BACb,0BAAMA,UAAU,kBACbwE,EAAGE,MADN,IACa,0BAAM1E,UAAU,wBAAhB,WAEZwE,EAAGG,MACF,yBACE3E,UAAU,iBACVwB,IAAKgD,EAAGG,MAAMC,KACdnD,IAAG,UAAKwC,EAAL,SAGL,yBAAKjE,UAAU,uBACb,kBAAC,IAAD,CAAaA,UAAU,uBACvB,0BAAMA,UAAU,sBAAhB,cAGJ,0BAAMA,UAAU,iBAAiBwE,EAAGK,KAAKC,MAAM,EAAG,MAEpD,yBAAK9E,UAAU,4BACb,0BAAMA,UAAU,kBAAkBwE,EAAGO,YAMzCC,EAAgB,WACpB,IAAIzE,EAOJ,OANAyD,EAAKzE,SAAQ,SAACoD,GACRA,EAAItE,QAAU4F,IAChB1D,EAAQoC,MAILpC,GAGT,OAAI5B,EAEA,yBAAKqB,UAAU,WACb,kBAAC,GAAD,OAMJ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,yBACZiE,EAAee,IAAgBnD,KAAO,kBAAC,KAAD,MACvC,0BAAM7B,UAAU,eACbiE,EAAee,IAAgB7F,KAAO,WAG3C,0BAAMa,UAAU,sBACbiE,EACG,4BADS,8BAEcF,KAG/B,yBAAK/D,UAAS,mBAAcuE,EAActD,QAAU,kBACjDsD,EAActD,OACbsD,EAEA,yBAAKvE,UAAU,aACZiE,EAAe,kBAAH,0BAA0CF,O,6BCsDpDkB,OAnJf,YAA+E,IAA5DC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAAiB,EAC1ClH,oBAAS,GADiC,mBACrEmH,EADqE,KAC1DC,EAD0D,OAEhDpH,mBAAS,IAFuC,mBAErEqH,EAFqE,KAE7DC,EAF6D,KAGpEhJ,EAAcJ,IAAdI,UACAH,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMzB,QAAvCuB,MAQF6C,EAAY,uCAAG,WAAOJ,GAAP,mBAAA/B,EAAA,yDACnB+B,EAAEK,iBADiB,SAGZoG,EAAOzE,OAAOC,OAHF,wDAOTjD,EAAiBkH,EAAjBlH,aAPS,SAQEtB,EAAU,CAC3BE,IAAK,0BACLC,OAAQ,OACRC,KAAM,CAAEkB,eAAc2H,QAASF,EAAQG,SAAUV,EAAQT,KACzD1H,QAAS,CAAEO,gBAAgB,KAZZ,OAQXR,EARW,OAeXsI,EAAQ,CACZtJ,IAAKS,EAAMb,KAAKI,IAChByF,SAAUhF,EAAMb,KAAK6F,SACrB/B,SAAUjD,EAAMb,KAAK8D,SACrBiF,IAAKlI,EAAMb,KAAK+I,KAGlBY,EAAa,2BAAKvI,GAAN,IAAYsI,WACxBM,EAAU,IACVF,GAAa,GAxBI,4GAAH,sDA4BZK,EAAY,uCAAG,WAAOC,GAAP,SAAA7I,EAAA,sEAEjBqI,EAAcQ,GAFG,SAIXpJ,EAAU,CACdE,IAAI,2BAAD,OAA6BkJ,GAChCjJ,OAAQ,SACRC,KAAM,CAAEqI,cACRpI,QAAS,CAAEO,gBAAgB,KARZ,8GAAH,sDAiBlB,OACE,yBAAK0C,UAAS,eAAUmF,GAAc,eACpC,yBAAKnF,UAAU,kBACZzD,EAAMA,OAAS2I,EAAQE,MAAMX,MAAQlI,EAAMb,KAAK+I,KAC/C,4BACEzE,UAAU,iCACVG,QAAS,kBAAM0F,EAAaX,EAAQT,OAEpC,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAM1D,GAAE,gBAAWmE,EAAQE,MAAMX,KAAOzE,UAAU,sBAChD,yBAAKwB,IAAK0D,EAAQE,MAAMtJ,IAAKkE,UAAU,WAAWyB,IAAI,cAI1D,yBAAKzB,UAAU,mBACb,yBAAKA,UAAU,cACe,UAA3BkF,EAAQE,MAAM7D,SACb,kBAAC,KAAD,CAAoBvB,UAAU,yCAE9B,kBAAC,KAAD,CACEA,UAAS,yBACPkF,EAAQE,MAAMX,MAAQW,GAAS,2BAIrC,kBAAC,IAAD,CAAMrE,GAAE,gBAAWmE,EAAQE,MAAMX,KAAOzE,UAAU,iBAC/CkF,EAAQE,MAAM5F,UAEjB,0BAAMQ,UAAU,aAAa+F,KAAOb,EAAQL,MAAMmB,aAGpD,yBAAKhG,UAAU,gBAAgBkF,EAAQS,SACtCR,GACC,yBAAKnF,UAAU,wBACb,4BACEA,UAAS,wCACPzD,EAAMA,MACFgJ,GAAa,wBACb,gBAENpF,QA7FQ,WACd5D,EAAMA,OACRiJ,GAAcD,KA6FN,yBAAKvF,UAAU,YAAf,mBAEE,0BAAMA,UAAU,mBAEjBuF,EACC,kBAAC,IAAD,MAEA,oCACE,kBAAC,KAAD,CAAsBvF,UAAU,cAChC,0BAAMA,UAAU,aAAhB,WAIN,0BACEI,SAAUhB,EACVY,UAAS,0BACPuF,GAAa,0BAGf,2BACEzK,KAAK,OACLkF,UAAU,aACV1B,MAAOmH,EACPxF,SAvEO,SAACjB,GACpB0G,EAAU1G,EAAEE,OAAOZ,QAuEP8C,YAAY,2BAEd,4BACEpB,UAAS,0CACNyF,EAAOzE,OAAOC,QAAU,iBAG3B,yBAAKjB,UAAU,YAAf,2BAEE,0BAAMA,UAAU,mBAElB,kBAAC,IAAD,CAASA,UAAU,cACnB,0BAAMA,UAAU,aAAhB,eClFDiG,OA/Df,YAAuE,IAAnDL,EAAkD,EAAlDA,SAAUM,EAAwC,EAAxCA,cAAed,EAAyB,EAAzBA,MAAOe,EAAkB,EAAlBA,eAAkB,EACtC/H,mBAAS,IAD6B,mBAC7DgI,EAD6D,KACpDC,EADoD,OAE5CjI,oBAAS,GAFmC,mBAE7DO,EAF6D,KAEvDmF,EAFuD,KAG5DpH,EAAcJ,IAAdI,UAER0H,qBAAU,WACR,IAAME,EAAK,uCAAG,4BAAArH,EAAA,+EAESP,EAAU,CAC3BE,IAAK,wBACLC,OAAQ,OACRC,KAAM,CAAEkB,aAAc4H,EAAS5H,aAAc4H,SAAUA,EAASnB,KAChE1H,QAAS,CAAEO,gBAAgB,KANnB,OAEJR,EAFI,OASVuJ,EAAWvJ,GACXgH,GAAQ,GAVE,yGAAH,qDAaNoC,EAGHpC,GAAQ,GAFRQ,MAID,CAAC5H,EAAWkJ,EAAUM,IAEzB,IAIMI,EAAe,SAACC,GACpBF,EAAWD,EAAQI,QAAO,SAACf,GAAD,OAAYA,EAAOhB,MAAQ8B,OAGjDE,EACJL,GACAA,EAAQnH,KAAI,SAACwG,GACX,OACE,kBAAC,GAAD,CACEP,QAASO,EACT1F,IAAK0F,EAAOhB,IACZW,MAAOA,EACPE,cAAegB,OAKvB,OACE,6BACE,kBAAC,GAAD,CACEpB,QAASU,EACTT,YAAU,EACVC,MAAOA,EACPC,aA3Be,SAACqB,GACpBL,EAAW,CAACK,GAAF,oBAAgBN,MA2BtBd,cAAea,IAEjB,yBAAKnG,UAAU,sCACZrB,EAAO,yBAAKqB,UAAU,WAAkByG,KCuGlCE,OA1Jf,YAAoD,IAA/B3I,EAA8B,EAA9BA,aAAcoH,EAAgB,EAAhBA,MAAOwB,EAAS,EAATA,MAAS,EACfxI,mBAAS,IADM,mBAC1CyI,EAD0C,KAC/BC,EAD+B,OAEnB1I,mBAAS,IAFU,mBAE1C2I,EAF0C,KAEjCC,EAFiC,OAGzB5I,oBAAS,GAHgB,mBAG1CO,EAH0C,KAGpCmF,EAHoC,KAIzCvH,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMzB,QAAvCuB,MACFgB,EAAWuB,cACTpC,EAAcJ,IAAdI,UAER0H,qBAAU,YACG,uCAAG,4BAAAnH,EAAA,+EAESP,EAAU,CAC3BE,IAAK,wBACLC,OAAQ,OACRC,KAAM,CAAEkB,gBACRjB,QAAS,CAAEO,gBAAgB,KANnB,OAEJR,EAFI,OASVgK,EAAahK,GACbgH,GAAQ,GAVE,yGAAH,qDAaXQ,KACC,CAAC5H,EAAWsB,IAEf,IAAMmI,EAAiB,SAACc,GACtBH,EAAaD,EAAUL,QAAO,SAACnL,GAAD,OAAUA,EAAKoJ,MAAQwC,OAGjDC,EAAWL,EAAU5H,KAAI,SAAC2G,GAC9B,OACE,kBAAC,GAAD,CACE7F,IAAK6F,EAASnB,IACdmB,SAAUA,EACVM,cAAeN,EAASM,cACxBd,MAAOA,EACPe,eAAgBA,OAShBgB,EAAa,uCAAG,8BAAAlK,EAAA,kEAEb8J,EAAQ/F,OAAOC,OAFF,iEAKCvE,EAAU,CAC3BE,IAAK,0BACLC,OAAQ,OACRC,KAAM,CAAEkB,eAAc2H,QAASoB,GAC/BhK,QAAS,CAAEO,gBAAgB,KATX,OAKZR,EALY,OAYZsI,EAAQ,CACZtJ,IAAKS,EAAMb,KAAKI,IAChByF,SAAUhF,EAAMb,KAAK6F,SACrB/B,SAAUjD,EAAMb,KAAK8D,SACrBiF,IAAKlI,EAAMb,KAAK+I,KAElBqC,EAAa,CAAC,2BAAKhK,GAAP,IAAasI,QAAOc,eAAe,KAAnC,oBAA8CW,KAC1DG,EAAW,IAnBO,4GAAH,qDAuBnB,OACE,oCACGzK,EAAMA,MACL,yBAAKyD,UAAU,oBACb,yBAAKA,UAAU,0CACb,kBAAC,IAAD,CACEe,GAAG,QACHf,UAAU,kDAEV,yBACEwB,IAAKjF,EAAMb,KAAKI,IAChBkE,UAAU,6BACVyB,IAAI,cAKV,yBAAKzB,UAAU,4CACb,yBAAKA,UAAU,kCACY,UAAxBzD,EAAMb,KAAK6F,SACV,kBAAC,KAAD,CAAoBvB,UAAU,iEAE9B,kBAAC,KAAD,CACEA,UAAS,iDACPzD,EAAMb,KAAK+I,MAAQW,GAAS,2BAIlC,kBAAC,IAAD,CAAMrE,GAAG,QAAQf,UAAU,wCACxBzD,EAAMb,KAAK8D,WAIhB,yBAAKQ,UAAU,gCACb,8BACEA,UAAU,sCACV1B,MAAOyI,EACP9G,SAhEO,SAACjB,GACpBgI,EAAWhI,EAAEE,OAAOZ,QAgER8C,YAAY,mBACZgG,IAAKR,KAGT,4BACE5G,UAAS,kDACN+G,EAAQ/F,OAAOC,QAAU,gBAE5Bd,QAASgH,GAET,yBAAKnH,UAAU,YAAf,6BAEE,0BAAMA,UAAU,mBAElB,0BAAMA,UAAU,aAAhB,WACA,kBAAC,IAAD,CAAcA,UAAU,iBAK9B,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAcA,UAAU,0BACxB,0BAAMA,UAAU,0BAAhB,qCAGA,4BACEA,UAAU,sCACVG,QAAS,kBAAM5C,EAASnB,OAExB,kBAAC,KAAD,CAAgB4D,UAAU,cAC1B,0BAAMA,UAAU,aAAhB,WAKN,yBAAKA,UAAU,kBACZrB,EACC,yBAAKqB,UAAU,WACbkH,EAASjG,OACXiG,EAEA,yBAAKlH,UAAU,aAAf,mBCsLKqH,OA1Tf,SAA0B9G,GAAQ,IAAD,EACPnC,mBAAS,CAAEkJ,OAAQ,KADZ,mBACxBxK,EADwB,KAClB+G,EADkB,KAEzB+C,EAAQW,mBACN7K,EAAcJ,IAAdI,UACFsH,EAAOpC,KAJkB,EAKPxD,oBAAS,GALF,mBAKxBO,EALwB,KAKlBmF,EALkB,OAMa1F,oBAAS,GANtB,mBAMxBoJ,EANwB,KAMRC,EANQ,OAU3BjL,aAAY,SAACC,GAAD,OAAWA,KAFjBF,EARqB,EAQ7BvB,KAAQuB,MACGuB,EATkB,EAS7B4J,QAAW5J,UAEPP,EAAWuB,cACTZ,EAAmBqC,EAAM2D,MAAMC,OAA/BjG,eAERkG,qBAAU,YACG,uCAAG,4BAAAnH,EAAA,+EAESP,EAAU,CAC3BE,IAAI,kCAAD,OAAoCsB,GACvCrB,OAAQ,MACRC,KAAM,KACNC,QAAS,CAAEO,gBAAgB,KANnB,OAEJR,EAFI,OAQV+G,EAAQ/G,GACRgH,GAAQ,GATE,yGAAH,qDAYXQ,KACC,CAACpG,EAAgBxB,IAUpB0H,qBAAU,WACR,IAAIuD,GAAY,EAChB7J,EAAUyB,SAAQ,SAAClE,GACbA,EAAKoJ,MAAQ3H,EAAK2H,MACpBkD,GAAY,MAIhBF,EAAkBE,KACjB,CAAC7J,EAAWhB,EAAK2H,MAEpB,IAAMmD,EAAkB,WACtB,IAAIhD,EAMJ,OALA9H,EAAKwK,OAAO/H,SAAQ,SAACuC,GACfA,EAAI+F,gBACNjD,EAAO9C,EAAI8C,SAGRA,GAGHkD,EAAc,uCAAG,4BAAA7K,EAAA,sEAEfuK,EACFjK,EAASU,EAAenB,EAAK2H,OAEvBzG,EAAe,CACnB2G,MAAOiD,IACPxC,MAAO,CACLtJ,IAAKgB,EAAKsI,MAAMtJ,IAChByF,SAAUzE,EAAKsI,MAAM7D,SACrB/B,SAAU1C,EAAKsI,MAAM5F,SACrBiF,IAAK3H,EAAKsI,MAAMX,KAElBC,MAAO5H,EAAK4H,MACZ/B,IAAK7F,EAAK6F,IACVoC,MAAOjI,EAAKiI,MACZN,IAAK3H,EAAK2H,KAEZlH,EAASQ,EAAY,eAAKC,MAlBT,SAqBbtB,EAAU,CACdE,IAAK4K,EAAiB,wBAA0B,wBAChD3K,OAAQ2K,EAAiB,SAAW,OACpC1K,KAAM,CAAEkB,aAAclB,EAAK2H,IAAKsD,UAAWP,IAAkB,GAC7DzK,QAAS,CAAEO,gBAAgB,KAzBV,8GAAH,qDAiDd0K,EAAUlL,EAAKwK,OAAOrI,KAAI,SAAC6C,GAC/B,OACE,4BACE/B,IAAK+B,EAAI2C,IACTzE,UAAS,8BACP8B,EAAI+F,eAAiB,+BAEvB1H,QAAS,kBA1BU8H,EA0BYnG,EAAI2C,SAzBvCZ,EAAQ,2BACH/G,GADE,IAELwK,OAAQxK,EAAKwK,OAAOrI,KAAI,SAAC6C,GACvB,OAAIA,EAAI2C,MAAQwD,GACVnG,EAAI+F,gBAGN/F,EAAI+F,eAAgB,GAFb/F,IAOXA,EAAI+F,eAAgB,EACb/F,SAdW,IAACmG,IA4BnB,yBAAKzG,IAAKM,EAAI8C,KAAM5E,UAAU,wBAAwByB,IAAI,eAK1DyG,EAAa,SAACC,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAItL,EAAKwK,OAAOrG,OAAQmH,IACtC,GAAItL,EAAKwK,OAAOc,GAAGP,cAAe,CAChC/K,EAAKwK,OAAOc,GAAGP,eAAgB,EAE/B,IAAIQ,EAAeF,EAASC,EAAI,EAAIA,EAAI,GAClB,IAAlBC,EACFvL,EAAKwK,OAAOxK,EAAKwK,OAAOrG,OAAS,GAAG4G,eAAgB,EAC3CQ,IAAiBvL,EAAKwK,OAAOrG,OACtCnE,EAAKwK,OAAO,GAAGO,eAAgB,EAE/B/K,EAAKwK,OAAOe,GAAcR,eAAgB,EAE5C,MAIJhE,EAAQ,2BACH/G,GADE,IAELwK,OAAQxK,EAAKwK,WAeXgB,EAAYxL,EAAKwK,OAAOrI,KAAI,SAAC6C,GACjC,OACE,yBACEN,IAAKM,EAAI8C,KACT7E,IAAK+B,EAAI2C,IACTzE,UAAS,kCACP8B,EAAI+F,eAAiB,mCAEvBpG,IAAI,kBAKV,GAAI9C,EACF,OACE,yBAAKqB,UAAU,WACb,kBAAC,GAAD,OA5KyB,MAiJX,WAClB,IAAIO,EAOJ,OANAyD,EAAKzE,SAAQ,SAACoD,GACRA,EAAItE,QAAUvB,EAAK6F,MACrBpC,EAAQoC,MAILpC,EAwBcgI,GAAf1G,EAjLuB,EAiLvBA,KAAM1C,EAjLiB,EAiLjBA,KACd,OACE,yBAAKa,UAAU,WACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,yBACb,kBAAC,KAAD,CAAkBA,UAAU,gBAC5B,0BAAMA,UAAU,eAAhB,YAEF,0BAAMA,UAAU,sBAAhB,eAAkDlD,EAAKiI,QAEzD,yBAAK/E,UAAU,cACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,iCACZlD,EAAKwK,OAAOrG,OACX,oCACGqH,EACD,4BACEtI,UAAU,6CACVG,QAAS,kBAAM+H,GAAW,KAE1B,kBAAC,IAAD,OAEF,4BACElI,UAAU,4CACVG,QAAS,kBAAM+H,GAAW,KAE1B,kBAAC,IAAD,QAIJ,yBAAKlI,UAAU,uBACb,kBAAC,IAAD,CAAaA,UAAU,uBACvB,0BAAMA,UAAU,sBAAhB,eAIN,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iCAAiCgI,KAIpD,yBAAKhI,UAAU,8BACZzD,EAAMA,QACJA,EAAMb,KAAK+I,MAAQ3H,EAAKsI,MAAMX,IAC7B,kBAAC,IAAD,CACEzE,UAAU,4BACVe,GAAE,gBAAWjE,EAAK2H,MAElB,kBAAC,IAAD,OAGF,4BACEzE,UAAS,oCACPwH,GAAkB,wBAEpBrH,QAAS2H,GAERN,EAAiB,kBAAC,IAAD,MAAsB,kBAAC,IAAD,QAG9C,wBAAIxH,UAAU,qBAAqBlD,EAAKiI,OACxC,yBAAK/E,UAAU,+BACb,4BACEA,UAAU,0CACVG,QAnNY,WAClB5D,EAAMA,MACRqK,EAAM4B,QAAQ5B,QAEdrJ,EAASnB,OAiND,kBAAC,KAAD,CAAe4D,UAAU,cACzB,0BAAMA,UAAU,aAAhB,mBAEF,yBAAKA,UAAU,qBAAqBlD,EAAK4H,MAAzC,YAEF,yBAAK1E,UAAU,iCAAf,gBACA,yBAAKA,UAAU,2BAA2BlD,EAAK2L,aAC/C,yBAAKzI,UAAU,0BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,4BAAhB,aACA,kBAAC,IAAD,CACEe,GAAE,sBAAiBjE,EAAK6F,KACxB3C,UAAU,6BAET6B,EACD,0BAAM7B,UAAU,aAAab,KAGjC,yBAAKa,UAAU,2BACb,0BAAMA,UAAU,4BAAhB,iBACA,0BAAMA,UAAU,+CACblD,EAAK+H,KAAKC,MAAM,EAAG,OAI1B,yBAAK9E,UAAU,kCACb,kBAAC,IAAD,CACEe,GAAE,gBAAWjE,EAAKsI,MAAMX,KACxBzE,UAAU,6BAEV,yBACEwB,IAAK1E,EAAKsI,MAAMtJ,IAChB2F,IAAI,UACJzB,UAAU,qBAGd,yBAAKA,UAAU,mCACb,kBAAC,IAAD,CACEe,GAAE,gBAAWjE,EAAKsI,MAAMX,KACxBzE,UAAU,wBAETlD,EAAKsI,MAAM5F,UAEd,0BAAMQ,UAAU,wBACW,UAAxBlD,EAAKsI,MAAM7D,SACV,kBAAC,KAAD,CAAoBvB,UAAU,gCAE9B,kBAAC,KAAD,CAAYA,UAAU,gCAExB,0BAAMA,UAAU,+BACblD,EAAKsI,MAAM7D,YAIlB,kBAAC,IAAD,CACER,GAAE,gBAAWjE,EAAKsI,MAAMX,KACxBzE,UAAU,iCAEV,0BAAMA,UAAU,aAAhB,kBACA,kBAAC,IAAD,CAAcA,UAAU,mBAMlC,kBAAC,GAAD,CAAWhC,aAAclB,EAAK2H,IAAKmC,MAAOA,EAAOxB,MAAOtI,EAAKsI,MAAMX,QC9U1D,OAA0B,oDCA1B,OAA0B,gDC6a1BiE,OAhaf,SAAiBnI,GAAQ,IACf7D,EAAcJ,IAAdI,UACFsH,EAAOpC,KACL1D,EAAmBqC,EAAM2D,MAAMC,OAA/BjG,eAHc,EAIEE,oBAAS,GAJX,mBAIfO,EAJe,KAITmF,EAJS,KAKd6E,EAAiBnM,aAAY,SAACC,GAAD,OAAWA,EAAMoC,UAA9C8J,aACFpL,EAAWuB,cANK,EAOEV,mBAAS,IAPX,mBAOfG,EAPe,KAOTC,EAPS,KAStB4F,qBAAU,WACR,IAAME,EAAK,uCAAG,4BAAArH,EAAA,+EAESP,EAAU,CAC3BE,IAAI,2CAAD,OAA6CsB,GAChDrB,OAAQ,MACRC,KAAM,KACNC,QAAS,CAAEO,gBAAgB,KANnB,OAEJR,EAFI,OASV0B,GAAQ,SAACoK,GAAD,OACNA,EAAS3J,KAAI,SAAC5D,GAMZ,OALAwN,OAAOC,KAAKhM,GAAMyC,SAAQ,SAACQ,GACrB1E,EAAKgD,QAAU0B,IACjB1E,EAAKiD,MAAQxB,EAAKiD,OAGf1E,QAGXyI,GAAQ,GAnBE,yGAAH,qDAuBXtF,EAAQ,CACN,CACEH,MAAO,QACPc,KAAM,QACNb,MAAO,GACPsB,IAAK,uCAEP,CACEvB,MAAO,cACPc,KAAM,cACNb,MAAO,GACPsB,IAAK,+DAEP,CACEvB,MAAO,MACPc,KAAM,WACNb,MAAO,cACPsB,IACE,qFAEJ,CACEvB,MAAO,QACPc,KAAM,QACNb,MAAO,IACPsB,IACE,8EAEJ,CACEvB,MAAO,sBACPc,KAAM,SACNb,MAAO,GACPsB,IACE,qFAEJ,CACEvB,MAAO,oBACPc,KAAM,gBACNb,MAAO,IACPsB,IAAK,uCAIL1B,GACFoG,IAEFR,GAAQ,KACP,CAAC5F,EAAgBxB,IAEpB,IAAMqC,EAAe,SAACC,GACpBR,EACED,EAAKU,KAAI,SAAC5D,GAQR,OAPIA,EAAKgD,QAAUW,EAAEE,OAAOC,OACP,wBAAf9D,EAAKgD,MACPhD,EAAKiD,MAAQU,EAAEE,OAAO6J,MAEtB1N,EAAKiD,MAAQU,EAAEE,OAAOZ,OAGnBjD,OAKP2N,EAAgB,WACpB,IAAIC,GAAU,EAcd,OAbA1K,EAAKgB,SAAQ,SAAClE,GACZ,GAA0B,kBAAfA,EAAKiD,QAAuBjD,EAAKiD,MAAM0C,OAAOC,OAAQ,CAC/D,GACiB,wBAAf5F,EAAKgD,OACU,sBAAfhD,EAAKgD,OACU,IAAfhD,EAAKiD,OACLjD,EAAKiD,MAAQ,EAEb,OAEF2K,GAAU,MAGPA,GAGH7J,EAAY,uCAAG,WAAOJ,GAAP,iBAAA/B,EAAA,6DACnB+B,EAAEK,iBADiB,SAGb6J,EAAK,IAAIC,SAEb5K,EAAKgB,SAAQ,SAAClE,GACO,wBAAfA,EAAKgD,MACP+K,MAAMC,UAAU9J,QAAQ+J,KAAKjO,EAAKiD,OAAO,SAACiL,GACxCL,EAAGM,OAAO,sBAAuBD,EAAMA,EAAKpK,SAG9C+J,EAAGO,IAAIpO,EAAKgD,MAAOhD,EAAKiD,UAXX,SAeE5B,EAAU,CAC3BE,IAAKsB,EAAc,0CACoBA,GACnC,oCACJrB,OAAQ,OACRC,KAAMoM,EACNnM,QAAS,CAAEO,gBAAgB,KArBZ,OAeXR,EAfW,OAwBjByD,EAAMM,QAAQM,KAAd,mBAA+BrE,EAAKmL,KAxBnB,4GAAH,sDA4BZpC,EAAY,uCAAG,4BAAA5I,EAAA,6DACnBM,EAASlB,KADU,SAEbK,EAAU,CACdE,IAAI,qCAAD,OAAuCsB,GAC1CrB,OAAQ,SACRC,KAAM,KACNC,QAAS,CAAEO,gBAAgB,KANV,OAUnBiB,EAAKgB,SAAQ,SAAClE,GACO,QAAfA,EAAKgD,QACPqL,EAAUrO,EAAKiD,UAGnBiC,EAAMM,QAAQM,KAAd,sBAAkCuI,IAff,2CAAH,qDAkBZ/J,EAASpB,EAAKU,KAAI,SAAC5D,GACvB,GAAmB,QAAfA,EAAKgD,MACP,OACE,yBAAK2B,UAAU,qBAAqBD,IAAK1E,EAAKgD,OAC5C,yBAAK2B,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAK8D,MACpC,yBAAKa,UAAU,wBACb,kBAAC,IAAD,CAAcA,UAAU,iCACxB,0BAAMA,UAAU,8BACb3E,EAAKuE,IACN,0BAAMI,UAAU,uBAItB,4BACEA,UAAU,oBACVb,KAAM9D,EAAKgD,MACXC,MAAOjD,EAAKiD,MACZ2B,SAAUlB,GAETiF,EAAK/E,KAAI,SAAC0D,GACT,OACE,4BACErE,MAAOqE,EAAItE,MACX0B,IAAK4C,EAAItE,MACT2B,UAAU,iBAET2C,EAAIxD,WAOZ,GAAmB,gBAAf9D,EAAKgD,MACd,OACE,2BAAO0B,IAAK1E,EAAKgD,MAAO2B,UAAU,6BAChC,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAK8D,KAApC,KACA,yBAAKa,UAAU,wBACb,kBAAC,IAAD,CAAcA,UAAU,iCACxB,0BAAMA,UAAU,8BACb3E,EAAKuE,IACN,0BAAMI,UAAU,uBAItB,8BACEb,KAAM9D,EAAKgD,MACXC,MAAOjD,EAAKiD,MACZ2B,SAAUlB,EACViB,UAAU,qBAIX,GAAmB,wBAAf3E,EAAKgD,MACd,OACE,yBAAK0B,IAAK1E,EAAKgD,MAAO2B,UAAU,sBAC9B,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAK8D,MACpC,yBAAKa,UAAU,wBACb,kBAAC,IAAD,CAAcA,UAAU,iCACxB,0BAAMA,UAAU,8BACb3E,EAAKuE,IACN,0BAAMI,UAAU,uBAItB,2BAAOA,UAAU,yBACf,kBAAC,IAAD,CAAUA,UAAU,cAAe,IACnC,0BAAMA,UAAU,aACb9B,EAAiB,kBAAoB,iBAExC,2BACEpD,KAAK,OACLqE,KAAM9D,EAAKgD,MACXsL,UAAQ,EACR1J,SAAUlB,EACViB,UAAU,2BAKb,GAAmB,sBAAf3E,EAAKgD,MAA+B,CAC7C,IAAIiJ,EAAS,GAMb,OALA/I,EAAKgB,SAAQ,SAAClE,GACO,wBAAfA,EAAKgD,QACPiJ,EAASjM,EAAKiD,UAIhB,yBACE0B,UAAS,6BAC2B,IAAlC6I,OAAOe,QAAQtC,GAAQrG,QAAgB,uBAEzClB,IAAK1E,EAAKgD,OAEV,yBAAK2B,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAK8D,MACpC,yBAAKa,UAAU,wBACb,kBAAC,IAAD,CAAcA,UAAU,iCACxB,0BAAMA,UAAU,8BACb3E,EAAKuE,IACN,0BAAMI,UAAU,uBAItB,4BACEA,UAAU,oBACVb,KAAM9D,EAAKgD,MACXC,MAAOjD,EAAKiD,MACZ2B,SAAUlB,GAETuI,GACC8B,MAAMC,UAAUpK,IAAIqK,KAAKhC,GAAQ,SAACiC,EAAMM,GACtC,OACE,4BACE9J,IAAKwJ,EAAKpK,KACVb,MAAOuL,EACP7J,UAAU,iBAETuJ,EAAKpK,WAQtB,OACE,2BAAOY,IAAK1E,EAAKgD,MAAO2B,UAAU,SAChC,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAK8D,KAApC,KACA,yBAAKa,UAAU,wBACb,kBAAC,IAAD,CAAcA,UAAU,iCACxB,0BAAMA,UAAU,8BACb3E,EAAKuE,IACN,0BAAMI,UAAU,uBAItB,2BACEA,UAAU,eACVlF,KAAK,OACLwD,MAAOjD,EAAKiD,MACZa,KAAM9D,EAAKgD,MACX4B,SAAUlB,EACVmB,aAAa,YAMrB,OAAIvB,EAEA,yBAAKqB,UAAU,WACb,kBAAC,GAAD,OAMJ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,yBACZ9B,EACC,kBAAC,KAAD,CAAQ8B,UAAU,gBAElB,kBAAC,IAAD,CAAYA,UAAU,gBAExB,0BAAMA,UAAU,eACb9B,EAAiB,OAAS,WAG/B,0BAAM8B,UAAU,sBACb9B,EACG,mCACA,4BAIR,yBAAK8B,UAAS,gBAAW2I,GAAgB,kBACvC,yBAAK3I,UAAU,yBACb,kBAAC,KAAD,CAAkBA,UAAU,gBAC5B,0BAAMA,UAAU,gBAAhB,WACA,uBAAGA,UAAU,sBAAb,6BAEF,yBAAKA,UAAU,wBACb,4BAAQA,UAAU,kBAAkBG,QAAS0F,GAC3C,kBAAC,KAAD,CAAkB7F,UAAU,cAC5B,0BAAMA,UAAU,aAAhB,QAEF,4BACEA,UAAU,iBACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,KAAD,CAAkB2D,UAAU,cAC5B,0BAAMA,UAAU,aAAhB,SAKN,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,yBAAyBI,SAAUhB,GAChDO,EACD,4BAAQK,UAAU,uBAEpB,yBAAKA,UAAU,wBACb,4BACEA,UAAS,cACPgJ,IACI,eACA9K,EACA,aACA,eAENiC,QAAS6I,IAAkB,aAAW5J,GAEtC,yBAAKY,UAAU,YAAf,mBAEE,0BAAMA,UAAU,mBAEjB9B,EACC,kBAAC,KAAD,CAAQ8B,UAAU,cAElB,kBAAC,KAAD,CAAQA,UAAU,cAEpB,0BAAMA,UAAU,aACb9B,EAAiB,OAAS,WAI9BA,GACC,4BACE8B,UAAU,iBACVG,QAAS,kBAAM5C,E9BjYtB,CACLzC,KAAMoB,M8BkYM,kBAAC,KAAD,CAAiB8D,UAAU,cAC3B,0BAAMA,UAAU,aAAhB,aAKR,yBAAKA,UAAU,iBACb,yBACEwB,IAAKtD,EAAiB4L,GAAcC,GACpCtI,IAAI,UACJzB,UAAU,oBC0IPgK,OAjhBf,SAAkBzJ,GAAQ,IAAD,EAQnB/D,aAAY,SAACC,GAAD,OAAWA,KARJ,IAErBzB,KACEG,EAHmB,EAGnBA,MACM8O,EAJa,EAInBtL,KACSjD,EALU,EAKnBa,MAASb,KAEDwO,EAPW,EAOrBrL,OAAUqL,WAGJC,EAAW5J,EAAM2D,MAAMC,OAAvBgG,OACF5M,EAAWuB,cAXM,EAYmBV,mBAAS,IAZ5B,mBAYhBmG,EAZgB,KAYD6F,EAZC,KAaf1N,EAAcJ,IAAdI,UAbe,EAcC0B,oBAAS,GAdV,mBAchBO,EAdgB,KAcVmF,EAdU,OAea1F,mBAAS,GAftB,mBAehBiM,EAfgB,KAeJC,EAfI,OAgBGlM,oBAAS,GAhBZ,mBAgBhBmM,EAhBgB,KAgBTC,EAhBS,OAiBWpM,mBAAS,IAjBpB,mBAiBhBqM,EAjBgB,KAiBLC,EAjBK,KAkBjB1G,EAAOpC,KAEP+I,EAAc,CAClB,CAAEtM,MAAO,WAAYc,KAAM,WAAYb,MAAO5C,EAAOA,EAAK8D,SAAW,IACrE,CAAEnB,MAAO,QAASc,KAAM,QAASb,MAAO5C,EAAOA,EAAK+D,MAAQ,IAC5D,CACEpB,MAAO,YACPc,KAAM,YACNb,MAAO5C,EAAOA,EAAKkP,UAAY,IAEjC,CAAEvM,MAAO,WAAYc,KAAM,WAAYb,MAAO5C,EAAOA,EAAKmP,SAAW,IACrE,CAAExM,MAAO,UAAWc,KAAM,UAAWb,MAAO5C,EAAOA,EAAKoP,QAAU,IAClE,CAAEzM,MAAO,QAASc,KAAM,QAASb,MAAO5C,EAAOA,EAAKqP,MAAQ,IAC5D,CACE1M,MAAO,QACPc,KAAM,MACNb,MAAO5C,EAAOA,EAAKsP,MAAQ,GAC3B5J,YAAa,wDAEf,CACE/C,MAAO,WACPc,KAAM,iBACNb,MAAO5C,EAAOA,EAAKuP,SAAW,GAC9B7J,YACE,iFA1CiB,EA8CChD,mBAASuM,GA9CV,mBA8ChBpM,EA9CgB,KA8CVC,EA9CU,KAgDvB4F,qBAAU,WACRoG,GAAS,KACR,CAAC9O,IAEJ0I,qBAAU,YACG,uCAAG,8BAAAnH,EAAA,mEAENkN,EAFM,gCAGezN,EAAU,CAC/BE,IAAI,kBAAD,OAAoBuN,GACvBtN,OAAQ,MACRC,KAAM,KACNC,QAAS,CAAEO,gBAAgB,KAPrB,OAGF4N,EAHE,OASRR,EAAaQ,GATL,uBAWiBxO,EAAU,CACnCE,IAAI,wCAAD,OACDuN,GAAkBzO,EAAK+I,KAEzB5H,OAAQ,MACRC,KAAM,KACNC,QAAS,CAAEO,gBAAgB,KAjBnB,OAWJ6N,EAXI,OAmBVf,EAAiBe,GACjBrH,GAAQ,GApBE,4GAAH,qDAuBXQ,KACC,CAAC5H,EAAWhB,EAAMyO,IAErB,IAkBMpL,GAAe,SAACC,GACfuL,GACHC,GAAS,GAEXhM,EACED,EAAKU,KAAI,SAAC5D,GAKR,OAJIA,EAAKgD,QAAUW,EAAEE,OAAOC,OAC1B9D,EAAKiD,MAAQU,EAAEE,OAAOZ,MACtBf,EAASjC,EAAmBD,KAEvBA,OAKP+D,GAAe,SAACJ,GAGpB,GAFAA,EAAEK,iBAEGkL,EAAL,CAIA,IAAIjL,GAAU,EAUd,GATAf,EAAKgB,SAAQ,SAAClE,GAEM,aAAfA,EAAKgD,OAAuC,UAAfhD,EAAKgD,OAClChD,EAAKiD,QAENf,EAASnC,EAASC,IAClBiE,GAAU,OAGVA,EAAJ,CAIA,IAAIxC,EAAO,GACXyB,EAAKgB,SAAQ,SAAC6L,GACZtO,EAAKsO,EAAK/M,OAAS+M,EAAK9M,SAG1Bf,EACEb,EAAU,CACRE,IAAK,oBACLC,OAAQ,OACRC,OACAC,QAAS,CACPlC,WAAYW,EACZT,aAAcU,EACdP,aAAcS,SAsBhBgE,GAASpB,EAAKU,KAAI,SAAC5D,GACvB,IAAMuE,EAjBO,SAACvE,GACd,IAAIuE,EAAM,GAMV,OALAzE,EAAMoE,SAAQ,SAACM,GACTxE,EAAKgD,QAAUwB,EAAIxB,QACrBuB,EAAMC,EAAID,QAGPA,EAUKE,CAAOzE,GACnB,MAAmB,UAAfA,EAAKgD,OAAoC,aAAfhD,EAAKgD,MAE/B,2BAAO0B,IAAK1E,EAAKgD,MAAO2B,UAAU,6BAChC,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,eAAe3E,EAAK8D,KAApC,MAEF,8BACEa,UAAU,wCACVb,KAAM9D,EAAKgD,MACXC,MAAOjD,EAAKiD,MACZ2B,SAAUlB,GACVqC,YAAa/F,EAAK+F,eAMxB,2BAAOrB,IAAK1E,EAAKgD,MAAO2B,UAAU,SAChC,yBAAKA,UAAU,yBACb,0BACEA,UAAS,uBACS,aAAf3E,EAAKgD,OAAuC,UAAfhD,EAAKgD,QACnC,qBAGDhD,EAAK8D,KANR,KAQA,yBACEa,UAAS,gCACNJ,GAAO,gCAGV,kBAAC,IAAD,CAAcI,UAAU,gBACxB,0BAAMA,UAAU,cACbJ,EACD,0BAAMI,UAAU,uBAItB,2BACEA,UAAS,uBAAkBJ,GAAO,yBAClC9E,KAAqB,UAAfO,EAAKgD,MAAoB,QAAU,OACzCC,MAAOjD,EAAKiD,MACZa,KAAM9D,EAAKgD,MACX4B,SAAUlB,GACVmB,aAAa,YAgBfmL,GAAY,SAACpD,GACjB,OAAIA,IAAOoC,GAMPiB,GAAY,SAACrD,GACjBqC,EAAcrC,IAGVsD,GAAmBhH,EAActF,KAAI,SAAC5D,GAAU,IAAD,EArBjC,SAACmQ,GACnB,IAAIC,EAMJ,OALAzH,EAAKzE,SAAQ,SAACoD,GACRA,EAAItE,QAAUmN,EAAS7I,MACzB8I,EAAW9I,MAGR8I,EAegBlD,CAAYlN,GAA3BwG,EAD2C,EAC3CA,KAAM1C,EADqC,EACrCA,KACd,OACE,yBAAKa,UAAU,eAAeD,IAAK1E,EAAKoJ,KACtC,kBAAC,IAAD,CAAMzE,UAAU,2BAA2Be,GAAE,mBAAc1F,EAAKoJ,MAC7DpJ,EAAKsJ,MACJ,yBACEnD,IAAKnG,EAAKsJ,MACV3E,UAAU,sBACVyB,IAAI,gBAGN,yBAAKzB,UAAU,2CACb,kBAAC,IAAD,CAAaA,UAAU,gDACvB,0BAAMA,UAAU,+CAAhB,cAKJ,0BAAMA,UAAU,sBAAsB3E,EAAKwJ,KAAKC,MAAM,EAAG,MAG3D,yBAAK9E,UAAU,8BACb,kBAAC,IAAD,CAAMA,UAAU,sBAAsBe,GAAE,mBAAc1F,EAAKoJ,MACxDpJ,EAAK0J,OAER,yBAAK/E,UAAU,gCAAf,YAEE,kBAAC,IAAD,CACEA,UAAU,8BACVe,GAAE,sBAAiB1F,EAAKsH,MAEvBd,EACD,0BAAM7B,UAAU,aAAab,KAGjC,yBAAKa,UAAU,uBACZ3E,EAAKqJ,MACN,0BAAM1E,UAAU,yBAAhB,aAGFmK,GACA,kBAAC,IAAD,CACEnK,UAAU,kCACVe,GAAE,gBAAW1F,EAAKoJ,MAElB,kBAAC,IAAD,WAONiH,GAAU,CACZ,CAAEvM,KAAM,gBAAiB0C,KAAM,kBAAC,IAAD,CAAc7B,UAAU,eACvD,CAAEb,KAAM,WAAY0C,KAAM,kBAAC,KAAD,CAAa7B,UAAU,eACjD,CAAEb,KAAM,WAAY0C,KAAM,kBAAC,IAAD,CAAS7B,UAAU,gBAEzCiL,GAAW,CACf,CAAE9L,KAAM,YAAab,MAAO6L,EAASM,EAAUG,UAAYlP,EAAKkP,WAChE,CAAEzL,KAAM,WAAYb,MAAO6L,EAASM,EAAUI,SAAWnP,EAAKmP,UAC9D,CAAE1L,KAAM,QAASb,MAAO6L,EAASM,EAAUhL,MAAQ/D,EAAK+D,OACxD,CAAEN,KAAM,QAASb,MAAO6L,EAASM,EAAUM,MAAQrP,EAAKqP,OACxD,CAAE5L,KAAM,UAAWb,MAAO6L,EAASM,EAAUK,QAAUpP,EAAKoP,SAC5D,CACE3L,KAAM,iBACNb,MAAO6L,EAASM,EAAUQ,SAAWvP,EAAKuP,WAI9Cd,GAAUuB,GAAQC,MAClB,IAAMC,GAAaF,GAAQzM,KAAI,SAAC4M,EAAKhC,GACnC,OACE,4BACE9J,IAAK8L,EAAI1M,KACTa,UAAS,2BACPqL,GAAUxB,IAAU,wBAEtB1J,QAAS,kBAAMmL,GAAUzB,KAExBgC,EAAIhK,KACL,0BAAM7B,UAAU,aAAa6L,EAAI1M,UAKjC2M,GAAcb,GAAShM,KAAI,SAAC5D,GAChC,OACE,yBAAK2E,UAAU,qBAAqBD,IAAK1E,EAAK8D,MAC3C9D,EAAK8D,KADR,IAEE,0BACEa,UAAS,wBACO,mBAAd3E,EAAK8D,MAA6B,wBAGnC9D,EAAKiD,MACJjD,EAAKiD,MAEL,0BAAM0B,UAAU,sBAAhB,gBAOV,OAAIrB,EAEA,yBAAKqB,UAAU,WACb,kBAAC,GAAD,QAKNtE,EAAOyO,EAASM,EAAY/O,EAE1B,yBAAKsE,UAAU,WACb,yBAAKA,UAAS,oBAAekK,GAAc,sBACzC,4BACElK,UAAU,qBACVG,QAAS,kBAAM5C,EAASlB,OAExB,kBAAC,IAAD,OAEF,yBAAK2D,UAAU,4BACb,yBAAKwB,IAAK9F,EAAKI,IAAKkE,UAAU,iBAAiByB,IAAI,cAErD,0BAAMzB,UAAU,uBAAuBtE,EAAK8D,WAE9C,yBAAKQ,UAAU,sBACb,yBAAKA,UAAU,yBACb,kBAAC,KAAD,MACA,0BAAMA,UAAU,eAAhB,YAEF,0BAAMA,UAAU,sBACbmK,EAAS,wBAA0B,0BAGxC,yBAAKnK,UAAU,QACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACZmK,EACC,4BACEnK,UAAU,gBACVG,QAAS,kBAAM5C,E/BlYtB,CACLzC,KAAMqB,M+BmYM,yBAAKqF,IAAK9F,EAAKI,IAAKkE,UAAU,cAAcyB,IAAI,aAGlD,2BAAOzB,UAAU,iBACf,0BAAMA,UAAU,wBACd,kBAAC,IAAD,CAAUA,UAAU,sBACpB,0BAAMA,UAAU,qBAAhB,iBAEF,yBAAKwB,IAAK9F,EAAKI,IAAKkE,UAAU,cAAcyB,IAAI,YAChD,2BACEzB,UAAU,qBACVlF,KAAK,OACLmF,SAhUS,SAACjB,GACxB,IAAMlD,EAAMkD,EAAEE,OAAO6J,MAAM,GAC3B,GAAKjN,EAAL,CAGA,IAAIgB,EAAO,IAAIqM,SACfrM,EAAK0M,OAAO,SAAU1N,EAAKA,EAAIqD,MAE/B5B,EACEb,EAAU,CACRE,IAAK,0BACLC,OAAQ,OACRC,OACAC,QAAS,CAAEhC,aAAcc,WAuTF,UAAlBH,EAAK6F,SACJ,kBAAC,KAAD,CAAoBvB,UAAU,oBAE9B,kBAAC,KAAD,CAAYA,UAAU,qBAG1B,wBAAIA,UAAU,kBAAkBtE,EAAK8D,UACrC,yBAAKQ,UAAU,kBAAf,IACItE,EAAKmP,SAAWnP,EAAKmP,SAAW,WAAY,IAC7CnP,EAAKkP,UAAYlP,EAAKkP,UAAY,YAFrC,KAIA,yBAAK5K,UAAU,oBACZtE,EAAKsP,MACJtP,EAAKsP,MACHb,EACF,0BAAMnK,UAAU,mBAAhB,6CAIA,uFACyD,IACvD,4BACEA,UAAU,kBACVG,QAAS,kBAAMmL,GAAU,KAF3B,eASN,yBAAKtL,UAAU,yBACb,kBAAC,KAAD,MACA,0BAAMA,UAAU,eAAetE,EAAK+D,SAEpC0K,GACA,kBAAC,IAAD,CACEpJ,GAAG,aACHf,UAAU,uCAEV,kBAAC,IAAD,CAAaA,UAAU,cACvB,0BAAMA,UAAU,aAAhB,eAKN,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,2BAA2B4L,IAC1C,yBAAK5L,UAAU,kBACb,yBACEA,UAAS,wBACPqL,GAAU,IAAM,wBAGjBE,GAAiBtK,OAChBsK,GAEA,yBAAKvL,UAAU,aAAf,qBAGJ,yBACEA,UAAS,wBACPqL,GAAU,IAAM,wBAGlB,yBAAKrL,UAAU,4BAA4B8L,MAE3C3B,GACA,yBACEnK,UAAS,wBACPqL,GAAU,IAAM,wBAGlB,yBAAKrL,UAAU,aACb,yBACEA,UAAS,4BACPiK,GAAY,8BAGd,yBAAKjK,UAAU,wBAEjB,0BAAMA,UAAU,oBAAoBI,SAAUhB,IAC3CO,GACD,4BAAQK,UAAU,4BAEpB,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6BACb,0BAAMA,UAAU,yBAAhB,iBAGA,0BAAMA,UAAU,mBACbtE,EAAKmJ,KAAKC,MAAM,EAAG,MAGxB,4BACE9E,UAAS,+CACPuK,GAAS,+BAEXpK,QAlVA,WAClB3B,EAAQmM,GACRH,GAAS,GACTjN,EAAShC,OAiVS,kBAAC,IAAD,CAAKyE,UAAU,cACf,0BAAMA,UAAU,aAAhB,WAEF,4BACEA,UAAS,gDACNuK,GAAS,gBAEZpK,QAASf,IAET,yBAAKY,UAAU,YAAf,8BAEE,0BAAMA,UAAU,mBAElB,kBAAC,IAAD,CAASA,UAAU,cACnB,0BAAMA,UAAU,aAAhB,mBCrcP+L,OArFf,SAAmBxL,GAAQ,IACjB7D,EAAcJ,IAAdI,UADgB,EAEA0B,mBAAS,IAFT,mBAEjBtB,EAFiB,KAEX+G,EAFW,OAGAzF,oBAAS,GAHT,mBAGjBO,EAHiB,KAGXmF,EAHW,KAKdvH,EACNC,aAAY,SAACC,GAAD,OAAWA,KADzBzB,KAAQuB,MAGV6H,qBAAU,YACG,uCAAG,4BAAAnH,EAAA,+EAESP,EAAU,CAC3BE,IAAK,kBACLC,OAAQ,MACRC,KAAM,KACNC,QAAS,CAAEO,gBAAgB,KANnB,OAEJR,EAFI,OAQV+G,EAAQ/G,GACRgH,GAAQ,GATE,yGAAH,qDAYXQ,KACC,CAAC5H,IAEJ,IAAMsP,EAAmB,SAAChN,GACxBA,EAAEiN,kBACFzO,QAAQC,IAAI,QAORyO,EAAQpP,EAAKmC,KAAI,SAACvD,GACtB,OACE,yBACEqE,IAAKrE,EAAK+I,IACVtE,QAAS,kBARa8H,EAQYvM,EAAK+I,SAP3ClE,EAAMM,QAAQM,KAAd,gBAA4B8G,IADH,IAACA,GAStBjI,UAAU,aAETzD,EAAMb,MAAgC,UAAxBa,EAAMb,KAAK6F,UACxB,4BACEvB,UAAU,4BACVG,QAAS6L,GAET,kBAAC,IAAD,OAGJ,yBAAKhM,UAAU,4BACb,yBAAKA,UAAU,iBAAiBwB,IAAK9F,EAAKI,IAAK2F,IAAI,aAErD,yBAAKzB,UAAU,mBACM,UAAlBtE,EAAK6F,SACJ,kBAAC,KAAD,CAAoBvB,UAAU,oBAE9B,kBAAC,KAAD,CAAYA,UAAU,oBAExB,0BAAMA,UAAU,uBAAuBtE,EAAK8D,eAMpD,OAAIb,EAEA,yBAAKqB,UAAU,WACb,kBAAC,GAAD,OAMJ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,yBACb,kBAAC,KAAD,MACA,0BAAMA,UAAU,eAAhB,UAEF,0BAAMA,UAAU,sBAAhB,yBAEF,yBAAKA,UAAU,SAASkM,KC8BfC,OA7Gf,WAA0B,IAEXrO,EACTtB,aAAY,SAACC,GAAD,OAAWA,KADzBiL,QAAW5J,UAEPkG,EAAOpC,KACPrE,EAAWuB,cACTpC,EAAcJ,IAAdI,UAYF0P,EAAY,uCAAG,WAAOC,GAAP,SAAApP,EAAA,sEAEjBM,EAASU,EAAeoO,IAFP,SAIX3P,EAAU,CACdE,IAAK,wBACLC,OAAQ,SACRC,KAAM,CAAEkB,aAAcqO,GACtBtP,QAAS,CAAEO,gBAAgB,KARZ,8GAAH,sDAaZgP,EAAexO,EAAUmB,KAAI,SAAC5D,GAAU,IAAD,EAvBzB,SAACmQ,GACnB,IAAIC,EAMJ,OALAzH,EAAKzE,SAAQ,SAACoD,GACRA,EAAItE,QAAUmN,EAAS7I,MACzB8I,EAAW9I,MAGR8I,EAiBgBlD,CAAYlN,GAA3BwG,EADmC,EACnCA,KAAM1C,EAD6B,EAC7BA,KACd,OACE,yBAAKa,UAAU,WAAWD,IAAK1E,EAAKoJ,KAClC,yBAAKzE,UAAU,wBACb,kBAAC,IAAD,CAAMe,GAAE,mBAAc1F,EAAKoJ,KAAOzE,UAAU,2BACzC3E,EAAKsJ,MACJ,yBACEnD,IAAKnG,EAAKsJ,MACV3E,UAAU,gBACVyB,IAAI,gBAGN,yBAAKzB,UAAU,wBACb,kBAAC,IAAD,CAAaA,UAAU,wBACvB,0BAAMA,UAAU,uBAAhB,eAIN,yBAAKA,UAAU,mBACZ3E,EAAKqJ,MACN,0BAAM1E,UAAU,yBAAhB,YAGJ,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CAAMA,UAAU,kBAAkBe,GAAE,mBAAc1F,EAAKoJ,MACpDpJ,EAAK0J,OAER,yBAAK/E,UAAU,gCAAf,YAEE,kBAAC,IAAD,CACEA,UAAU,8BACVe,GAAE,sBAAiB1F,EAAKsH,MAEvBd,EACD,0BAAM7B,UAAU,aAAab,KAGjC,kBAAC,IAAD,CAAM4B,GAAE,gBAAW1F,EAAK+J,MAAMX,KAAOzE,UAAU,mBAC7C,0BAAMA,UAAU,2BACd,yBACEwB,IAAKnG,EAAK+J,MAAMtJ,IAChBkE,UAAU,gBACVyB,IAAI,aAGR,0BAAMzB,UAAU,sBAAsB3E,EAAK+J,MAAM5F,YAGrD,4BACEQ,UAAU,gCACVG,QAAS,kBAAMiM,EAAa/Q,EAAKoJ,OAEjC,kBAAC,IAAD,WAKR,OACE,yBAAKzE,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,MACA,0BAAMA,UAAU,eAAhB,cAEF,0BAAMA,UAAU,sBAAhB,iCAEF,yBAAKA,UAAU,aACZsM,EAAarL,OACZqL,EAEA,yBAAKtM,UAAU,aAAf,mBCEKuM,OA/Ff,WAAmB,IAAD,EAIZ/P,aAAY,SAACC,GAAD,OAAWA,KAFjBF,EAFM,EAEdvB,KAAQuB,MAFM,IAGdsC,OAAU2B,EAHI,EAGJA,SAAU5B,EAHN,EAGMA,SAAU+J,EAHhB,EAGgBA,aAAcuB,EAH9B,EAG8BA,WAExC3M,EAAWuB,cACTpC,EAAcJ,IAAdI,UAeR,OAbA0H,qBAAU,WACJ7H,EAAMA,OACRgB,EACEb,EAAU,CACRE,IAAK,sBACLC,OAAQ,MACRC,KAAM,KACNC,QAAS,CAAEhC,qBAIhB,CAACwC,EAAUb,EAAWH,EAAMA,QAG7B,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBACE4D,QAAS,kBAAM5C,EAASlB,MACxB2D,UAAS,sBACNQ,GAAY5B,GAAY+J,GAAgBuB,IACzC,wBAGH3N,EAAMA,OACLA,EAAMb,KAAK6F,SACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOF,OAAK,EAACuD,KAAK,IAAI4H,UAAW9K,KACjC,kBAAC,IAAD,CAAOkD,KAAK,UAAU4H,UAAW5I,KACjC,kBAAC,IAAD,CAAOvC,OAAK,EAACuD,KAAK,cAAc4H,UAAW/J,KAC3C,kBAAC,IAAD,CAAOmC,KAAK,UAAU4H,UAAW9D,KACjC,kBAAC,IAAD,CAAO9D,KAAK,SAAS4H,UAAWT,KAChC,kBAAC,IAAD,CAAO1K,OAAK,EAACuD,KAAK,QAAQ4H,UAAWxC,KACrC,kBAAC,IAAD,CAAOpF,KAAK,aAAa4H,UAAWL,KACpC,kBAAC,IAAD,CACEvH,KAAK,4BACL4H,UAAW5I,KAEb,kBAAC,IAAD,CACEgB,KAAK,2BACL4H,UAAWnF,KAEb,kBAAC,IAAD,CAAOzC,KAAK,wBAAwB4H,UAAW9D,KAC/C,kBAAC,IAAD,CAAO9D,KAAK,gBAAgB4H,UAAWxC,KACvC,kBAAC,IAAD,CAAUjJ,GAAG,QAyBjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACuD,KAAK,IAAI4H,UAAW9K,KACjC,kBAAC,IAAD,CAAOkD,KAAK,UAAU4H,UAAW5I,KACjC,kBAAC,IAAD,CAAOvC,OAAK,EAACuD,KAAK,cAAc4H,UAAW/J,KAC3C,kBAAC,IAAD,CAAOmC,KAAK,SAAS4H,UAAWT,KAChC,kBAAC,IAAD,CACEnH,KAAK,4BACL4H,UAAW5I,KAEb,kBAAC,IAAD,CAAOgB,KAAK,2BAA2B4H,UAAWnF,KAClD,kBAAC,IAAD,CAAOzC,KAAK,gBAAgB4H,UAAWxC,KACvC,kBAAC,IAAD,CAAUjJ,GAAG,SCxFR0L,OAdf,WACE,OACE,oCACE,yBAAKzM,UAAU,QACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,mBACb,kBAAC,KAAD,CAAcA,UAAU,eACxB,0BAAMA,UAAU,cAAhB,gBCkBK0M,OArBf,WAAgB,IAAD,EACWtO,oBAAS,GADpB,mBACNO,EADM,KACAmF,EADA,KAEPvG,EAAWuB,cASjB,OAPAsF,qBAAU,WACR7G,EtCqCK,CACLzC,KAAMV,IsCrCNuS,YAAW,WACT7I,GAAQ,KACP,OACF,CAACvG,IAEAoB,EACK,kBAAC,GAAD,MAGP,kBAAC,IAAD,KACE,kBAAC,GAAD,QCZciO,QACW,cAA7BC,OAAOlM,SAASmM,UAEe,UAA7BD,OAAOlM,SAASmM,UAEhBD,OAAOlM,SAASmM,SAAS5I,MACvB,2D,sBCVA6I,GAAe,CACnBvM,UAAU,EACV5B,UAAU,EACV+J,cAAc,EACduB,YAAY,GA6CC8C,GA1CO,WAAmC,IAAlCvQ,EAAiC,uDAAzBsQ,GAAcE,EAAW,uCACtD,OAAQA,EAAOnS,MACb,KAAKiB,EACH,MAAO,CACLyE,UAAW/D,EAAM+D,SACjB5B,UAAU,EACV+J,cAAc,EACduB,YAAY,GAEhB,KAAKlO,EACH,MAAO,CACLwE,UAAU,EACV5B,UAAWnC,EAAMmC,SACjB+J,cAAc,EACduB,YAAY,GAEhB,KAAKjO,EACH,MAAO,CACLuE,UAAU,EACV5B,UAAU,EACV+J,cAAc,EACduB,YAAY,GAEhB,KAAKhO,EACH,MAAO,CACLsE,UAAU,EACV5B,UAAU,EACV+J,cAAelM,EAAMkM,aACrBuB,YAAY,GAEhB,KAAK/N,EACH,MAAO,CACLqE,UAAU,EACV5B,UAAU,EACV+J,cAAc,EACduB,YAAazN,EAAMyN,YAEvB,QACE,OAAOzN,ICtCPsQ,GAAe,CACnBpO,MAAM,EACNpC,MAAO,GACPpB,MAAO,IA+FM+R,GA5FK,WAAmC,IAAlCzQ,EAAiC,uDAAzBsQ,GAAcE,EAAW,uCACpD,OAAQA,EAAOnS,MACb,KAAKb,EACH,MAAO,CACL0E,MAAM,EACNpC,MAAO,GACPpB,MAAO,IAEX,KAAKjB,EAAL,IACU4C,EAASmQ,EAAOhS,QAAhB6B,KAER,OADAqQ,aAAaC,QAAQ,OAAQC,KAAKC,UAAUxQ,IACrC,CACL6B,MAAM,EACNpC,MAAOO,EACP3B,MAAO,IAEX,KAAKhB,EACH,MAAO,CACLwE,MAAM,EACNpC,MAAO,GACPpB,MAAO8R,EAAOhS,SAElB,KAAKZ,EAAL,IACUgE,EAAU4O,EAAOhS,QAAjBoD,MACR,OAAO,2BACF5B,GADL,IAEEtB,MAAM,GAAD,oBAAMsB,EAAMtB,OAAZ,CAAmB,CAAEkD,QAAOuB,IAAK,wBAE1C,KAAKtF,EACH,OAAO,2BACFmC,GADL,IAEEtB,MAAOsB,EAAMtB,MAAM8D,KAAI,SAACY,GAItB,OAHIA,EAAIxB,QAAU4O,EAAOhS,QAAQoD,QAC/BwB,EAAID,IAAM,IAELC,OAGb,KAAKtF,EACH,OAAO,2BACFkC,GADL,IAEEtB,MAAO,KAEX,KAAKf,EACH,IAAMY,EAAOmS,aAAaI,QAAQ,QAClC,OAAKvS,EAGE,2BACFyB,GADL,IAEEF,MAAO8Q,KAAKG,MAAMxS,KAJXyB,EAMX,KAAKjC,EAEH,OADA2S,aAAaM,WAAW,QACjB,2BACFhR,GADL,IAEEF,MAAO,KAEX,KAAK9B,EACH,OAAO,2BACFgC,GADL,IAEEkC,MAAM,IAEV,KAAKjE,EACH,IAAM6B,EAAK,2BAAQE,EAAMF,OAAd,IAAqBb,KAAMuR,EAAOhS,QAAQ6B,OAErD,OADAqQ,aAAaC,QAAQ,OAAQC,KAAKC,UAAU/Q,IACrC,CACLpB,MAAO,GACPwD,MAAM,EACNpC,SAEJ,KAAK5B,EACH,OAAO,2BACF8B,GADL,IAEEkC,MAAM,EACNxD,MAAO8R,EAAOhS,UAElB,KAAKL,EACH,IAAM8S,EAAQ,2BACTjR,EAAMF,OADG,IAEZb,KAAK,2BAAMe,EAAMF,MAAMb,MAAnB,IAAyBI,IAAKmR,EAAOhS,QAAQ6B,SAGnD,OADAqQ,aAAaC,QAAQ,OAAQC,KAAKC,UAAUI,IACrC,2BACFjR,GADL,IAEEF,MAAOmR,IAEX,QACE,OAAOjR,IC3GPsQ,GAAe,CACnBhJ,KAAM,IAcO4J,GAXO,WAAmC,IAAlClR,EAAiC,uDAAzBsQ,GAAcE,EAAW,uCACtD,OAAQA,EAAOnS,MACb,KAAKuF,GACH,MAAO,CACL0D,KAAMkJ,EAAOhS,SAEjB,QACE,OAAOwB,ICPPsQ,GAAe,CACnBjP,UAAW,IAwBE8P,GArBU,WAAmC,IAAlCnR,EAAiC,uDAAzBsQ,GAAcE,EAAW,uCACzD,OAAQA,EAAOnS,MACb,KAAK6C,EACH,MAAO,CACLG,UAAWmP,EAAOhS,QAAQ6B,MAE9B,KAAKc,EACH,MAAO,CACLE,UAAU,GAAD,oBAAMrB,EAAMqB,WAAZ,CAAuBmP,EAAOhS,WAE3C,KAAK4C,EACH,MAAO,CACLC,UAAWrB,EAAMqB,UAAU0I,QACzB,SAACnL,GAAD,OAAUA,EAAKoJ,MAAQwI,EAAOhS,YAGpC,QACE,OAAOwB,ICfEoR,GANKC,aAAgB,CAClC9S,KAAMkS,GACNrO,OAAQmO,GACRvM,OAAQkN,GACRjG,QAASkG,KCLIG,GADDC,aAAYH,GAAaI,aAAgBC,OCIvDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,QAGJO,SAASC,eAAe,SPqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3T,GACLqC,QAAQrC,MAAMA,EAAM+J,c","file":"static/js/main.09f4f8a6.chunk.js","sourcesContent":["export const FETCH_START_AUTH = \"FETCH_START_AUTH\"\r\nexport const FETCH_SUCCESS_AUTH = \"FETCH_SUCCESS_AUTH\"\r\nexport const FETCH_FAILURE_AUTH = \"FETCH_FAILURE_AUTH\"\r\nexport const SET_TOKEN_AUTH = \"SET_TOKEN_AUTH\"\r\nexport const SET_ERROR_AUTH = \"SET_ERROR_AUTH\"\r\nexport const CLEAR_SPECIFIC_ERROR_AUTH = \"CLEAR_SPECIFIC_ERROR_AUTH\"\r\nexport const CLEAR_ERRORS_AUTH = \"CLEAR_ERRORS_AUTH\"\r\nexport const CLEAR_DATA_AUTH = \"CLEAR_DATA_AUTH\"\r\nexport const UPDATE_START_AUTH = \"UPDATE_START_AUTH\"\r\nexport const UPDATE_SUCCESS_AUTH = \"UPDATE_SUCCESS_AUTH\"\r\nexport const UPDATE_FAILURE_AUTH = \"UPDATE_FAILURE_AUTH\"\r\nexport const UPDATE_AVATAR_AUTH = \"UPDATE_AVATAR_AUTH\"\r\n","import {\r\n  FETCH_START_AUTH,\r\n  FETCH_SUCCESS_AUTH,\r\n  FETCH_FAILURE_AUTH,\r\n  SET_TOKEN_AUTH,\r\n  SET_ERROR_AUTH,\r\n  CLEAR_SPECIFIC_ERROR_AUTH,\r\n  CLEAR_ERRORS_AUTH,\r\n  CLEAR_DATA_AUTH,\r\n  UPDATE_START_AUTH,\r\n  UPDATE_SUCCESS_AUTH,\r\n  UPDATE_FAILURE_AUTH,\r\n  UPDATE_AVATAR_AUTH,\r\n} from \"./authTypes\"\r\n\r\nexport const fetchStart = () => {\r\n  return {\r\n    type: FETCH_START_AUTH,\r\n  }\r\n}\r\nexport const fetchSuccess = (auth) => {\r\n  return {\r\n    type: FETCH_SUCCESS_AUTH,\r\n    payload: auth,\r\n  }\r\n}\r\nexport const fetchFailure = (error) => {\r\n  return {\r\n    type: FETCH_FAILURE_AUTH,\r\n    payload: error,\r\n  }\r\n}\r\nexport const setError = (item) => {\r\n  return {\r\n    type: SET_ERROR_AUTH,\r\n    payload: item,\r\n  }\r\n}\r\nexport const clearSpecificError = (item) => {\r\n  return {\r\n    type: CLEAR_SPECIFIC_ERROR_AUTH,\r\n    payload: item,\r\n  }\r\n}\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS_AUTH,\r\n  }\r\n}\r\nexport const setToken = () => {\r\n  return {\r\n    type: SET_TOKEN_AUTH,\r\n  }\r\n}\r\nexport const clearData = () => {\r\n  return {\r\n    type: CLEAR_DATA_AUTH,\r\n  }\r\n}\r\nexport const updateStart = () => {\r\n  return {\r\n    type: UPDATE_START_AUTH,\r\n  }\r\n}\r\nexport const updateSuccess = (user) => {\r\n  return {\r\n    type: UPDATE_SUCCESS_AUTH,\r\n    payload: user,\r\n  }\r\n}\r\nexport const updateFailure = (errors) => {\r\n  return {\r\n    type: UPDATE_FAILURE_AUTH,\r\n    payload: errors,\r\n  }\r\n}\r\nexport const updateAvatar = (ava) => {\r\n  return {\r\n    type: UPDATE_AVATAR_AUTH,\r\n    payload: ava,\r\n  }\r\n}\r\n","export const TOGGLE_DROPMENU_NAVBAR = \"TOGGLE_DROPMENU_NAVBAR\"\r\nexport const TOGGLE_AUTH_FORM_NAVBAR = \"TOGGLE_AUTH_FORM_NAVBAR\"\r\nexport const RESET_NAVBAR = \"RESET_NAVBAR\"\r\nexport const TOGGLE_POPUP_WARNING_NAVBAR = \"TOGGLE_POPUP_WARNING_NAVBAR\"\r\nexport const TOGGLE_POPUP_IMAGE = \"TOGGLE_POPUP_IMAGE\"\r\n","import {\r\n  TOGGLE_DROPMENU_NAVBAR,\r\n  TOGGLE_AUTH_FORM_NAVBAR,\r\n  RESET_NAVBAR,\r\n  TOGGLE_POPUP_WARNING_NAVBAR,\r\n  TOGGLE_POPUP_IMAGE,\r\n} from \"./navbarTypes\"\r\n\r\nexport const toggleDropMenu = () => {\r\n  return {\r\n    type: TOGGLE_DROPMENU_NAVBAR,\r\n  }\r\n}\r\nexport const toggleAuthForm = () => {\r\n  return {\r\n    type: TOGGLE_AUTH_FORM_NAVBAR,\r\n  }\r\n}\r\nexport const resetNavbar = () => {\r\n  return {\r\n    type: RESET_NAVBAR,\r\n  }\r\n}\r\nexport const togglePopupWarning = () => {\r\n  return {\r\n    type: TOGGLE_POPUP_WARNING_NAVBAR,\r\n  }\r\n}\r\nexport const togglePopupImage = () => {\r\n  return {\r\n    type: TOGGLE_POPUP_IMAGE,\r\n  }\r\n}\r\n","import { useCallback } from \"react\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { resetNavbar } from \"../redux/navbar/navbarActions\"\r\n\r\nfunction useHTTP() {\r\n  const { token } = useSelector((state) => state.auth)\r\n\r\n  const fetchData = useCallback(\r\n    ({ url, method, data, options }) => {\r\n      const makeRequest = async () => {\r\n        const res = await axios({\r\n          url,\r\n          method,\r\n          data,\r\n          headers: token && {\r\n            Authorization: `Basic ${token.token}`,\r\n          },\r\n        })\r\n        return res.data\r\n      }\r\n\r\n      if (options.isLocalStorage) {\r\n        return (async function () {\r\n          try {\r\n            const data = await makeRequest()\r\n            return data\r\n          } catch (error) {}\r\n        })()\r\n      }\r\n      return async (dispatch) => {\r\n        try {\r\n          options.fetchStart && dispatch(options.fetchStart())\r\n          const data = await makeRequest()\r\n          dispatch(options.fetchSuccess({ data, options }))\r\n          dispatch(resetNavbar())\r\n        } catch (error) {\r\n          console.log(error)\r\n          options.fetchFailure &&\r\n            dispatch(options.fetchFailure(error.response.data.errors))\r\n        }\r\n      }\r\n    },\r\n    [token]\r\n  )\r\n\r\n  return { fetchData }\r\n}\r\n\r\nexport default useHTTP\r\n","export const FETCH_SUCCESS_MARKS = \"FETCH_SUCCESS_MARKS\"\r\nexport const ADD_BOOKMARK_MARKS = \"ADD_BOOKMARK_MARKS\"\r\nexport const REMOVE_BOOKMARK_MARKS = \"REMOVE_BOOKMARK_MARKS\"\r\n","import {\r\n  FETCH_SUCCESS_MARKS,\r\n  ADD_BOOKMARK_MARKS,\r\n  REMOVE_BOOKMARK_MARKS,\r\n} from \"./bookmarksTypes\"\r\n\r\nexport const fetchSuccess = (bookmarks) => {\r\n  return {\r\n    type: FETCH_SUCCESS_MARKS,\r\n    payload: bookmarks,\r\n  }\r\n}\r\nexport const addBookmark = (announcement) => {\r\n  return {\r\n    type: ADD_BOOKMARK_MARKS,\r\n    payload: announcement,\r\n  }\r\n}\r\nexport const removeBookmark = (announcementId) => {\r\n  return {\r\n    type: REMOVE_BOOKMARK_MARKS,\r\n    payload: announcementId,\r\n  }\r\n}\r\n","import React, { useState } from \"react\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport { BsInfoCircle, BsX } from \"react-icons/bs\"\r\nimport { AiOutlineLogin, AiOutlineCheckCircle } from \"react-icons/ai\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {\r\n  fetchStart,\r\n  fetchSuccess,\r\n  fetchFailure,\r\n  setError,\r\n  clearSpecificError,\r\n  clearErrors,\r\n} from \"../redux/auth/authActions\"\r\nimport { resetNavbar } from \"../redux/navbar/navbarActions\"\r\n\r\nfunction Auth() {\r\n  const [form, setForm] = useState([\r\n    { param: \"username\", type: \"text\", value: \"\" },\r\n    { param: \"email\", type: \"email\", value: \"\" },\r\n    { param: \"password\", type: \"password\", value: \"\" },\r\n  ])\r\n  const [isLogin, setIsLogin] = useState(true)\r\n  const { fetchData } = useHTTP()\r\n  const {\r\n    auth: { load, error },\r\n    navbar: { authForm },\r\n  } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (e) => {\r\n    setForm(\r\n      form.map((item) => {\r\n        if (item.param === e.target.name) {\r\n          item.value = e.target.value\r\n          dispatch(clearSpecificError(item))\r\n        }\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleChangeForm = () => {\r\n    setIsLogin(!isLogin)\r\n    dispatch(clearErrors())\r\n  }\r\n\r\n  const getMsg = (item) => {\r\n    let msg = \"\"\r\n    error.forEach((err) => {\r\n      if (item.param === err.param) {\r\n        msg = err.msg\r\n      }\r\n    })\r\n    return msg\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let isError = false\r\n    form.forEach((item) => {\r\n      if (!item.value) {\r\n        if (isLogin && item.param === \"username\") {\r\n          return\r\n        }\r\n        dispatch(setError(item))\r\n        isError = true\r\n      }\r\n    })\r\n    if (isError) {\r\n      return\r\n    }\r\n\r\n    const [username, email, password] = form\r\n    const data = { email: email.value, password: password.value }\r\n\r\n    dispatch(\r\n      fetchData({\r\n        url: `/auth/${isLogin ? \"login\" : \"register\"}`,\r\n        method: \"post\",\r\n        data: isLogin ? { ...data } : { ...data, username: username.value },\r\n        options: { fetchStart, fetchSuccess, fetchFailure },\r\n      })\r\n    )\r\n  }\r\n\r\n  const fields = form.map((item) => {\r\n    const msg = getMsg(item)\r\n    return (\r\n      <label\r\n        key={item.param}\r\n        className={`field ${\r\n          isLogin && item.param === \"username\" && \"field--close\"\r\n        }`}\r\n      >\r\n        <div className='field__container-info'>\r\n          <span className='field__name'>{item.param}:</span>\r\n          <div\r\n            className={`field__container-msg ${\r\n              !msg && \"field__container-msg--close\"\r\n            }`}\r\n          >\r\n            <BsInfoCircle className='field__icon' />\r\n            <span className='field__msg'>\r\n              {msg}\r\n              <span className='field__triangle'></span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <input\r\n          className={`field__input ${msg && \"field__input--warning\"}`}\r\n          type={item.type}\r\n          value={item.value}\r\n          name={item.param}\r\n          onChange={handleChange}\r\n          autoComplete='off'\r\n        />\r\n      </label>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={`auth-form ${authForm && \"auth-form--open\"}`}>\r\n      <div\r\n        className={`auth-form__loader ${load && \"auth-form__loader--active\"}`}\r\n      >\r\n        <div className='auth-form__spinner'></div>\r\n      </div>\r\n      <button\r\n        className='auth-form__btn btn'\r\n        onClick={() => dispatch(resetNavbar())}\r\n      >\r\n        <BsX />\r\n      </button>\r\n      <h2 className='auth-form__title'>{isLogin ? \"Login\" : \"Register\"}</h2>\r\n      <form onSubmit={handleSubmit} className='auth-form__container-fields'>\r\n        {fields}\r\n        <button className='auth-form__btn-handler'></button>\r\n      </form>\r\n      <div className='auth-form__container-btns'>\r\n        <button onClick={handleSubmit} className='btn btn-primary'>\r\n          {isLogin ? (\r\n            <AiOutlineLogin className='btn__icon' />\r\n          ) : (\r\n            <AiOutlineCheckCircle className='btn__icon' />\r\n          )}\r\n          <span className='btn__name'>{isLogin ? \"Sign In\" : \"Sign Up\"}</span>\r\n        </button>\r\n        <button onClick={handleChangeForm} className='btn btn-simple'>\r\n          {isLogin ? (\r\n            <AiOutlineCheckCircle className='btn__icon' />\r\n          ) : (\r\n            <AiOutlineLogin className='btn__icon' />\r\n          )}\r\n          <span className='btn__name'>{isLogin ? \"Sign Up\" : \"Sign In\"}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","export const SET_TEXT_SEARCH = \"SET_TEXT_SEARCH\"\r\n","import React, { useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { FaBuysellads } from \"react-icons/fa\"\r\nimport {\r\n  AiOutlineUnorderedList,\r\n  AiOutlineUser,\r\n  AiOutlineLogout,\r\n  AiOutlineLogin,\r\n} from \"react-icons/ai\"\r\nimport { FiUsers, FiPlus } from \"react-icons/fi\"\r\nimport { RiSearch2Line } from \"react-icons/ri\"\r\nimport { BsBookmarks } from \"react-icons/bs\"\r\nimport { clearData } from \"../redux/auth/authActions\"\r\nimport {\r\n  toggleDropMenu,\r\n  toggleAuthForm,\r\n  resetNavbar,\r\n} from \"../redux/navbar/navbarActions\"\r\nimport { setText } from \"../redux/search/searchActions\"\r\nimport { useLocation, useHistory } from \"react-router-dom\"\r\n\r\nfunction Navbar(props) {\r\n  const {\r\n    auth: { token },\r\n    navbar: { dropMenu, authForm },\r\n  } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const [search, setSearch] = useState(\"\")\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value)\r\n    dispatch(resetNavbar())\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    dispatch(clearData())\r\n    dispatch(resetNavbar())\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!search.trim().length) {\r\n      return\r\n    }\r\n    dispatch(resetNavbar())\r\n    dispatch(setText(search))\r\n    if (location.pathname === \"/search\") {\r\n      return\r\n    }\r\n    history.push(\"/search\")\r\n  }\r\n\r\n  return (\r\n    <div className='nav'>\r\n      <div className='nav__menu'>\r\n        <NavLink\r\n          to='/'\r\n          className='nav__link nav__logo-link'\r\n          onClick={() => dispatch(resetNavbar())}\r\n        >\r\n          <FaBuysellads className='nav__logo' />\r\n          <span className='nav__link-name'>AD-Stack</span>\r\n        </NavLink>\r\n\r\n        <form onSubmit={handleSubmit} className='nav__search'>\r\n          <input\r\n            type='text'\r\n            value={search}\r\n            className='nav__search-input'\r\n            onChange={handleChange}\r\n            placeholder='Search'\r\n            autoComplete='off'\r\n          />\r\n          <button className='nav__search-btn'>\r\n            <RiSearch2Line />\r\n          </button>\r\n        </form>\r\n\r\n        <NavLink\r\n          exact\r\n          to='/categories'\r\n          activeClassName='nav__link--active'\r\n          className='nav__link'\r\n          onClick={() => dispatch(resetNavbar())}\r\n        >\r\n          <AiOutlineUnorderedList />\r\n          <span className='nav__link-name'>Categories</span>\r\n        </NavLink>\r\n        <NavLink\r\n          to='/users'\r\n          activeClassName='nav__link--active'\r\n          className='nav__link'\r\n          onClick={() => dispatch(resetNavbar())}\r\n        >\r\n          <FiUsers />\r\n          <span className='nav__link-name'>Users</span>\r\n        </NavLink>\r\n        {token.user && token.user.typeUser ? (\r\n          <>\r\n            <NavLink\r\n              to='/create'\r\n              activeClassName='nav__link--active'\r\n              className='nav__link'\r\n              onClick={() => dispatch(resetNavbar())}\r\n            >\r\n              <FiPlus />\r\n              <span className='nav__link-name'>Create</span>\r\n            </NavLink>\r\n            <div className='nav__container-drop'>\r\n              <button\r\n                onClick={() => dispatch(toggleDropMenu())}\r\n                className={`nav__link nav__btn ${\r\n                  dropMenu && \"nav__link--active\"\r\n                }`}\r\n              >\r\n                <span className='nav__container-img'>\r\n                  <img\r\n                    className='nav__img'\r\n                    src={token.user.ava}\r\n                    alt='userImage'\r\n                  />\r\n                </span>\r\n                <span className='nav__link-name'>{token.user.username}</span>\r\n              </button>\r\n              <div\r\n                className={`nav__drop-menu ${\r\n                  dropMenu && \"nav__drop-menu--open\"\r\n                }`}\r\n              >\r\n                <NavLink\r\n                  to='/user'\r\n                  exact\r\n                  activeClassName='nav__link--active'\r\n                  className='nav__link'\r\n                  onClick={() => dispatch(resetNavbar())}\r\n                >\r\n                  <AiOutlineUser />\r\n                  <span className='nav__link-name'>Profile</span>\r\n                </NavLink>\r\n                <NavLink\r\n                  to='/bookmarks'\r\n                  activeClassName='nav__link--active'\r\n                  className='nav__link'\r\n                  onClick={() => dispatch(resetNavbar())}\r\n                >\r\n                  <BsBookmarks />\r\n                  <span className='nav__link-name'>Bookmarks</span>\r\n                </NavLink>\r\n                <button className='nav__link' onClick={handleLogout}>\r\n                  <AiOutlineLogout />\r\n                  <span className='nav__link-name'>Sign Out</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <button\r\n            className={`nav__link ${authForm && \"nav__link--active\"}`}\r\n            onClick={() => dispatch(toggleAuthForm())}\r\n          >\r\n            <AiOutlineLogin />\r\n            <span className='nav__link-name'>Sign In</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { SET_TEXT_SEARCH } from \"./searchTypes\"\r\n\r\nexport const setText = (text) => {\r\n  return {\r\n    type: SET_TEXT_SEARCH,\r\n    payload: text,\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/undraw_in_sync_xwsa.3a743f30.svg\";","import React from \"react\"\r\n// import mainBgImage from \"../imgs/undraw_marketing_v0iu.svg\"\r\nimport mainBgImage from \"../imgs/undraw_in_sync_xwsa.svg\"\r\nimport { FaBuysellads } from \"react-icons/fa\"\r\nimport { AiOutlineUnorderedList } from \"react-icons/ai\"\r\nimport { FiPlus } from \"react-icons/fi\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { toggleAuthForm } from \"../redux/navbar/navbarActions\"\r\n\r\nfunction MainPage(props) {\r\n  const { token } = useSelector((state) => state.auth)\r\n  const dispatch = useDispatch()\r\n  const handlerGoCabinet = () => {\r\n    if (token.token) {\r\n      props.history.push(\"/create\")\r\n    } else {\r\n      dispatch(toggleAuthForm())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='main__bg-content'></div>\r\n      <div className='main__bg-background'></div>\r\n      <div className='main__container-content'>\r\n        <div className='main__content'>\r\n          <h1 className='main__title'>\r\n            <FaBuysellads className='main__icon' />\r\n            <span className='main__name'>AD-Stack</span>\r\n          </h1>\r\n          <p className='main__paragraph'>\r\n            Don't wait for a better opportunity, just make an announcement and\r\n            your life will be easier\r\n          </p>\r\n          <div className='main__container-btns'>\r\n            <button onClick={handlerGoCabinet} className='btn btn-primary'>\r\n              <FiPlus className='btn__icon' />\r\n              <span className='btn__name'>Announce</span>\r\n            </button>\r\n            <Link to='/categories' className='btn link'>\r\n              <AiOutlineUnorderedList className='btn__icon' />\r\n              <span className='btn__name'>Categories</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className='main__bg-img'>\r\n          <img src={mainBgImage} className='main__img' alt='mainBgImage' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","export default __webpack_public_path__ + \"static/media/undraw_agreement_aajr.24aece28.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Vehicle_sale_a645.108aaaf4.svg\";","export default __webpack_public_path__ + \"static/media/undraw_posting_photo_v65l.84bb436d.svg\";","export default __webpack_public_path__ + \"static/media/undraw_suburbs_8b83.c7a6b0de.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Design_thinking_re_644h.1b161425.svg\";","export default __webpack_public_path__ + \"static/media/undraw_for_sale_viax.5e13d98f.svg\";","export default __webpack_public_path__ + \"static/media/undraw_heavy_box_agqi.b9e56771.svg\";","export default __webpack_public_path__ + \"static/media/undraw_co-working_825n.cb71d625.svg\";","export default __webpack_public_path__ + \"static/media/undraw_Cautious_dog_q83f.808fa8f2.svg\";","export default __webpack_public_path__ + \"static/media/undraw_eco_conscious_1y58.0396d38f.svg\";","import React from \"react\"\r\nimport { AiOutlineCar, AiOutlineLaptop, AiOutlineEye } from \"react-icons/ai\"\r\nimport {\r\n  GiGreenhouse,\r\n  GiShakingHands,\r\n  GiTrojanHorse,\r\n  GiHouseKeys,\r\n} from \"react-icons/gi\"\r\nimport { GrWorkshop } from \"react-icons/gr\"\r\nimport { RiToolsLine } from \"react-icons/ri\"\r\nimport { FaDog } from \"react-icons/fa\"\r\n\r\nimport business_services from \"../imgs/undraw_agreement_aajr.svg\"\r\nimport transport from \"../imgs/undraw_Vehicle_sale_a645.svg\"\r\nimport electronics from \"../imgs/undraw_posting_photo_v65l.svg\"\r\nimport house_garden from \"../imgs/undraw_suburbs_8b83.svg\"\r\nimport childrens_world from \"../imgs/undraw_Design_thinking_re_644h.svg\"\r\nimport real_estate from \"../imgs/undraw_for_sale_viax.svg\"\r\nimport spare_parts_for_transport from \"../imgs/undraw_heavy_box_agqi.svg\"\r\nimport work from \"../imgs/undraw_co-working_825n.svg\"\r\nimport animals from \"../imgs/undraw_Cautious_dog_q83f.svg\"\r\nimport fashion_style from \"../imgs/undraw_eco_conscious_1y58.svg\"\r\n\r\nfunction useTags() {\r\n  return [\r\n    {\r\n      param: \"transport\",\r\n      name: \"Transport\",\r\n      icon: <AiOutlineCar className='btn__icon' />,\r\n      img: transport,\r\n    },\r\n    {\r\n      param: \"house_garden\",\r\n      name: \"House and garden\",\r\n      icon: <GiGreenhouse className='btn__icon' />,\r\n      img: house_garden,\r\n    },\r\n    {\r\n      param: \"electronics\",\r\n      name: \"Electronics\",\r\n      icon: <AiOutlineLaptop className='btn__icon' />,\r\n      img: electronics,\r\n    },\r\n    {\r\n      param: \"childrens_world\",\r\n      name: \"Children's world\",\r\n      icon: <GiTrojanHorse className='btn__icon' />,\r\n      img: childrens_world,\r\n    },\r\n    {\r\n      param: \"real_estate\",\r\n      name: \"Real estate\",\r\n      icon: <GiHouseKeys className='btn__icon' />,\r\n      img: real_estate,\r\n    },\r\n    {\r\n      param: \"spare_parts_for_transport\",\r\n      name: \"Spare parts for transport\",\r\n      icon: <RiToolsLine className='btn__icon' />,\r\n      img: spare_parts_for_transport,\r\n    },\r\n    {\r\n      param: \"work\",\r\n      name: \"Work\",\r\n      icon: <GrWorkshop className='btn__icon' />,\r\n      img: work,\r\n    },\r\n    {\r\n      param: \"animals\",\r\n      name: \"Animals\",\r\n      icon: <FaDog className='btn__icon' />,\r\n      img: animals,\r\n    },\r\n    {\r\n      param: \"business_services\",\r\n      name: \"Business and services\",\r\n      icon: <GiShakingHands className='btn__icon' />,\r\n      img: business_services,\r\n    },\r\n    {\r\n      param: \"fashion_style\",\r\n      name: \"Fashion and style\",\r\n      icon: <AiOutlineEye className='btn__icon' />,\r\n      img: fashion_style,\r\n    },\r\n  ]\r\n}\r\n\r\nexport default useTags\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { AiOutlineUnorderedList } from \"react-icons/ai\"\r\nimport useTags from \"../hooks/useTags\"\r\n\r\nfunction CategoriesPage() {\r\n  const tags = useTags()\r\n  const tagsJSX = tags.map((tag) => {\r\n    return (\r\n      <Link\r\n        to={`/categories/${tag.param}`}\r\n        key={tag.param}\r\n        className='categories__link'\r\n      >\r\n        <span className='categories__name'>{tag.name}</span>\r\n        <img src={tag.img} className='categories__image' alt='categoryImg' />\r\n      </Link>\r\n    )\r\n  })\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title'>\r\n        <div className='title__container-name'>\r\n          <AiOutlineUnorderedList className='title__icon' />\r\n          <span className='title__name'>Categories</span>\r\n        </div>\r\n        <span className='title__description'>\r\n          Choose what you are looking for\r\n        </span>\r\n      </div>\r\n      <div className='categories'>{tagsJSX}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesPage\r\n","import React from \"react\"\r\n\r\nfunction PageLoader() {\r\n  const fillColor = \"rgb(239, 240, 240)\"\r\n  return (\r\n    <svg\r\n      version='1.1'\r\n      className='page-loader'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      xlinkHref='http://www.w3.org/1999/xlink'\r\n      x='0px'\r\n      y='0px'\r\n      viewBox='0 0 100 100'\r\n      enableBackground='new 0 0 100 100'\r\n    >\r\n      <path\r\n        fill={fillColor}\r\n        d='M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\r\n  c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z'\r\n      >\r\n        <animateTransform\r\n          attributeName='transform'\r\n          attributeType='XML'\r\n          type='rotate'\r\n          dur='2s'\r\n          from='0 50 50'\r\n          to='360 50 50'\r\n          repeatCount='indefinite'\r\n        />\r\n      </path>\r\n      <path\r\n        fill={fillColor}\r\n        d='M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\r\n  c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z'\r\n      >\r\n        <animateTransform\r\n          attributeName='transform'\r\n          attributeType='XML'\r\n          type='rotate'\r\n          dur='1s'\r\n          from='0 50 50'\r\n          to='-360 50 50'\r\n          repeatCount='indefinite'\r\n        />\r\n      </path>\r\n      <path\r\n        fill={fillColor}\r\n        d='M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\r\n  L82,35.7z'\r\n      >\r\n        <animateTransform\r\n          attributeName='transform'\r\n          attributeType='XML'\r\n          type='rotate'\r\n          dur='2s'\r\n          from='0 50 50'\r\n          to='360 50 50'\r\n          repeatCount='indefinite'\r\n        />\r\n      </path>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React, { useEffect, useState } from \"react\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport useTags from \"../hooks/useTags\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { BsCardImage } from \"react-icons/bs\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { AiOutlineFileSearch } from \"react-icons/ai\"\r\nimport PageLoader from \"../components/PageLoader\"\r\n\r\nfunction AnnouncementsPage(props) {\r\n  const [data, setData] = useState([])\r\n  const [load, setLoad] = useState(true)\r\n  const { fetchData } = useHTTP()\r\n  const { text } = useSelector((state) => state.search)\r\n  const tags = useTags()\r\n  const { categoryName } = props.match.params\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        setLoad(true)\r\n        const data = await fetchData({\r\n          url: categoryName\r\n            ? `/announcement/get-announcements/${categoryName}`\r\n            : \"/announcement/search-announcements\",\r\n          method: categoryName ? \"get\" : \"post\",\r\n          data: categoryName ? null : { searchText: text },\r\n          options: { isLocalStorage: true },\r\n        })\r\n        setData(data)\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n    fetch()\r\n  }, [categoryName, fetchData, text])\r\n\r\n  const announcements =\r\n    data.length &&\r\n    data.map((ad) => {\r\n      return (\r\n        <Link className='announc__link' key={ad._id} to={`/details/${ad._id}`}>\r\n          <div className='announc__container-img'>\r\n            <span className='announc__price'>\r\n              {ad.price} <span className='announc__grivna-sign'>&#8372;</span>\r\n            </span>\r\n            {ad.image ? (\r\n              <img\r\n                className='announc__image'\r\n                src={ad.image.path}\r\n                alt={`${categoryName}Img`}\r\n              />\r\n            ) : (\r\n              <div className='announc__plug-image'>\r\n                <BsCardImage className='announc__plug-icon' />\r\n                <span className='announc__plug-name'>No Images</span>\r\n              </div>\r\n            )}\r\n            <span className='announc__date'>{ad.date.slice(0, 10)}</span>\r\n          </div>\r\n          <div className='announc__container-title'>\r\n            <span className='announc__title'>{ad.title}</span>\r\n          </div>\r\n        </Link>\r\n      )\r\n    })\r\n\r\n  const getTitleProps = () => {\r\n    let props\r\n    tags.forEach((tag) => {\r\n      if (tag.param === categoryName) {\r\n        props = tag\r\n      }\r\n    })\r\n\r\n    return props\r\n  }\r\n\r\n  if (load) {\r\n    return (\r\n      <div className='wrapper'>\r\n        <PageLoader />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title'>\r\n        <div className='title__container-name'>\r\n          {categoryName ? getTitleProps().icon : <AiOutlineFileSearch />}\r\n          <span className='title__name'>\r\n            {categoryName ? getTitleProps().name : \"Search\"}\r\n          </span>\r\n        </div>\r\n        <span className='title__description'>\r\n          {categoryName\r\n            ? \"Choose what interests you\"\r\n            : `Search results for: ${text}`}\r\n        </span>\r\n      </div>\r\n      <div className={`announc ${!announcements.length && \"announc-empty\"}`}>\r\n        {announcements.length ? (\r\n          announcements\r\n        ) : (\r\n          <div className='plug-text'>\r\n            {categoryName ? \"Temporary empty\" : `No results for: ${text}`}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnnouncementsPage\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  RiQuestionAnswerLine,\r\n  RiUserSettingsLine,\r\n  RiUserLine,\r\n} from \"react-icons/ri\"\r\nimport { BsX, BsCheck } from \"react-icons/bs\"\r\nimport { useSelector } from \"react-redux\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport moment from \"moment\"\r\n\r\nfunction Message({ message, isQuestion, owner, setNewAnswer, deleteHandler }) {\r\n  const [dropReply, setDropReply] = useState(false)\r\n  const [answer, setAnswer] = useState(\"\")\r\n  const { fetchData } = useHTTP()\r\n  const { token } = useSelector((state) => state.auth)\r\n\r\n  const toggleReply = () => {\r\n    if (token.token) {\r\n      setDropReply(!dropReply)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (!answer.trim().length) {\r\n        return\r\n      }\r\n\r\n      const { announcement } = message\r\n      const data = await fetchData({\r\n        url: \"/message/create-message\",\r\n        method: \"post\",\r\n        data: { announcement, content: answer, question: message._id },\r\n        options: { isLocalStorage: true },\r\n      })\r\n\r\n      const owner = {\r\n        ava: token.user.ava,\r\n        typeUser: token.user.typeUser,\r\n        username: token.user.username,\r\n        _id: token.user._id,\r\n      }\r\n\r\n      setNewAnswer({ ...data, owner })\r\n      setAnswer(\"\")\r\n      setDropReply(false)\r\n    } catch (error) {}\r\n  }\r\n\r\n  const handleDelete = async (msgId) => {\r\n    try {\r\n      deleteHandler(msgId)\r\n\r\n      await fetchData({\r\n        url: `/message/delete-message/${msgId}`,\r\n        method: \"delete\",\r\n        data: { isQuestion },\r\n        options: { isLocalStorage: true },\r\n      })\r\n    } catch (error) {}\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setAnswer(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={`msg ${!isQuestion && \"msg-answer\"}`}>\r\n      <div className='msg__left-side'>\r\n        {token.token && message.owner._id === token.user._id && (\r\n          <button\r\n            className='msg__btn-delete btn btn-simple'\r\n            onClick={() => handleDelete(message._id)}\r\n          >\r\n            <BsX />\r\n          </button>\r\n        )}\r\n        <Link to={`/user/${message.owner._id}`} className='msg__container-ava'>\r\n          <img src={message.owner.ava} className='msg__ava' alt='userAva' />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className='msg__right-side'>\r\n        <div className='msg__title'>\r\n          {message.owner.typeUser === \"admin\" ? (\r\n            <RiUserSettingsLine className='msg__type-icon msg__type-icon--admin' />\r\n          ) : (\r\n            <RiUserLine\r\n              className={`msg__type-icon ${\r\n                message.owner._id === owner && \"msg__type-icon--owner\"\r\n              }`}\r\n            />\r\n          )}\r\n          <Link to={`/user/${message.owner._id}`} className='msg__username'>\r\n            {message.owner.username}\r\n          </Link>\r\n          <span className='msg__date'>{moment(message.date).calendar()}</span>\r\n        </div>\r\n\r\n        <div className='msg__content'>{message.content}</div>\r\n        {isQuestion && (\r\n          <div className='msg__container-reply'>\r\n            <button\r\n              className={`msg__btn-reply btn btn-simple ${\r\n                token.token\r\n                  ? dropReply && \"msg__btn-reply--close\"\r\n                  : \"btn-disabled\"\r\n              }`}\r\n              onClick={toggleReply}\r\n            >\r\n              <div className='btn__msg'>\r\n                Login, to reply!\r\n                <span className='btn__triangle'></span>\r\n              </div>\r\n              {dropReply ? (\r\n                <BsX />\r\n              ) : (\r\n                <>\r\n                  <RiQuestionAnswerLine className='btn__icon' />\r\n                  <span className='btn__name'>Reply</span>\r\n                </>\r\n              )}\r\n            </button>\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className={`msg__form-reply ${\r\n                dropReply && \"msg__form-reply--open\"\r\n              }`}\r\n            >\r\n              <input\r\n                type='text'\r\n                className='msg__input'\r\n                value={answer}\r\n                onChange={handleChange}\r\n                placeholder='Write your answer here'\r\n              />\r\n              <button\r\n                className={`msg__btn-apply btn btn-primary ${\r\n                  !answer.trim().length && \"btn-disabled\"\r\n                }`}\r\n              >\r\n                <div className='btn__msg'>\r\n                  Type something to reply!\r\n                  <span className='btn__triangle'></span>\r\n                </div>\r\n                <BsCheck className='btn__icon' />\r\n                <span className='btn__name'>Apply</span>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Message from \"./Message\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\n\r\nfunction Question({ question, isNewQuestion, owner, deleteQuestion }) {\r\n  const [answers, setAnswers] = useState([])\r\n  const [load, setLoad] = useState(true)\r\n  const { fetchData } = useHTTP()\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const data = await fetchData({\r\n          url: \"/message/get-messages\",\r\n          method: \"post\",\r\n          data: { announcement: question.announcement, question: question._id },\r\n          options: { isLocalStorage: true },\r\n        })\r\n\r\n        setAnswers(data)\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n    if (!isNewQuestion) {\r\n      fetch()\r\n    } else {\r\n      setLoad(false)\r\n    }\r\n  }, [fetchData, question, isNewQuestion])\r\n\r\n  const setNewAnswer = (answerNew) => {\r\n    setAnswers([answerNew, ...answers])\r\n  }\r\n\r\n  const deleteAnswer = (answerId) => {\r\n    setAnswers(answers.filter((answer) => answer._id !== answerId))\r\n  }\r\n\r\n  const answersJSX =\r\n    answers &&\r\n    answers.map((answer) => {\r\n      return (\r\n        <Message\r\n          message={answer}\r\n          key={answer._id}\r\n          owner={owner}\r\n          deleteHandler={deleteAnswer}\r\n        />\r\n      )\r\n    })\r\n\r\n  return (\r\n    <div>\r\n      <Message\r\n        message={question}\r\n        isQuestion\r\n        owner={owner}\r\n        setNewAnswer={setNewAnswer}\r\n        deleteHandler={deleteQuestion}\r\n      />\r\n      <div className='container-msgs container-questions'>\r\n        {load ? <div className='loader'></div> : answersJSX}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question\r\n","import React, { useEffect, useState } from \"react\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport Question from \"./Question\"\r\nimport { BsArrowRight, BsInfoCircle } from \"react-icons/bs\"\r\nimport { RiUserSettingsLine, RiUserLine } from \"react-icons/ri\"\r\nimport { toggleAuthForm } from \"../redux/navbar/navbarActions\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { AiOutlineLogin } from \"react-icons/ai\"\r\n\r\nfunction Questions({ announcement, owner, focus }) {\r\n  const [questions, setQuestions] = useState([])\r\n  const [comment, setComment] = useState(\"\")\r\n  const [load, setLoad] = useState(true)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const dispatch = useDispatch()\r\n  const { fetchData } = useHTTP()\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const data = await fetchData({\r\n          url: \"/message/get-messages\",\r\n          method: \"post\",\r\n          data: { announcement },\r\n          options: { isLocalStorage: true },\r\n        })\r\n\r\n        setQuestions(data)\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n    fetch()\r\n  }, [fetchData, announcement])\r\n\r\n  const deleteQuestion = (questionId) => {\r\n    setQuestions(questions.filter((item) => item._id !== questionId))\r\n  }\r\n\r\n  const messages = questions.map((question) => {\r\n    return (\r\n      <Question\r\n        key={question._id}\r\n        question={question}\r\n        isNewQuestion={question.isNewQuestion}\r\n        owner={owner}\r\n        deleteQuestion={deleteQuestion}\r\n      />\r\n    )\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    setComment(e.target.value)\r\n  }\r\n\r\n  const handleComment = async () => {\r\n    try {\r\n      if (!comment.trim().length) {\r\n        return\r\n      }\r\n      const data = await fetchData({\r\n        url: \"/message/create-message\",\r\n        method: \"post\",\r\n        data: { announcement, content: comment },\r\n        options: { isLocalStorage: true },\r\n      })\r\n\r\n      const owner = {\r\n        ava: token.user.ava,\r\n        typeUser: token.user.typeUser,\r\n        username: token.user.username,\r\n        _id: token.user._id,\r\n      }\r\n      setQuestions([{ ...data, owner, isNewQuestion: true }, ...questions])\r\n      setComment(\"\")\r\n    } catch (error) {}\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {token.token ? (\r\n        <div className='comment-form msg'>\r\n          <div className='comment-form__left-side msg__left-side'>\r\n            <Link\r\n              to='/user'\r\n              className='comment-form__container-ava msg__container-ava'\r\n            >\r\n              <img\r\n                src={token.user.ava}\r\n                className='comment-form__ava msg__ava'\r\n                alt='userAva'\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className='comment-form__right-side msg__right-side'>\r\n            <div className='comment-form__title msg__title'>\r\n              {token.user.typeUser === \"admin\" ? (\r\n                <RiUserSettingsLine className='comment-form__type-icon msg__type-icon msg__type-icon--admin' />\r\n              ) : (\r\n                <RiUserLine\r\n                  className={`comment-form__type-icon msg__type-icon ${\r\n                    token.user._id === owner && \"msg__type-icon--owner\"\r\n                  }`}\r\n                />\r\n              )}\r\n              <Link to='/user' className='comment-form__username msg__username'>\r\n                {token.user.username}\r\n              </Link>\r\n            </div>\r\n\r\n            <div className='comment-form__container-text'>\r\n              <textarea\r\n                className='comment-form__textarea msg__content'\r\n                value={comment}\r\n                onChange={handleChange}\r\n                placeholder='Leave a question'\r\n                ref={focus}\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              className={`comment-form__btn-post btn btn-primary ${\r\n                !comment.trim().length && \"btn-disabled\"\r\n              }`}\r\n              onClick={handleComment}\r\n            >\r\n              <div className='btn__msg'>\r\n                Type something to comment!\r\n                <span className='btn__triangle'></span>\r\n              </div>\r\n              <span className='btn__name'>Comment</span>\r\n              <BsArrowRight className='btn__icon' />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className='comment-warning'>\r\n          <BsInfoCircle className='comment-warning__icon' />\r\n          <span className='comment-warning__title'>\r\n            Please login, to write a question\r\n          </span>\r\n          <button\r\n            className='comment-warning__btn btn btn-simple'\r\n            onClick={() => dispatch(toggleAuthForm())}\r\n          >\r\n            <AiOutlineLogin className='btn__icon' />\r\n            <span className='btn__name'>Login</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className='container-msgs'>\r\n        {load ? (\r\n          <div className='loader'></div>\r\n        ) : messages.length ? (\r\n          messages\r\n        ) : (\r\n          <div className='plug-text'>No questions</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Questions\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport useTags from \"../hooks/useTags\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { AiOutlinePicLeft } from \"react-icons/ai\"\r\nimport {\r\n  BsChevronLeft,\r\n  BsChevronRight,\r\n  BsCardImage,\r\n  BsGear,\r\n  BsArrowRight,\r\n  BsBookmarkCheck,\r\n  BsBookmarkPlus,\r\n} from \"react-icons/bs\"\r\nimport { RiUserSettingsLine, RiUserLine } from \"react-icons/ri\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Questions from \"../components/Questions\"\r\nimport {\r\n  addBookmark,\r\n  removeBookmark,\r\n} from \"../redux/bookmarks/bookmarksActions\"\r\nimport { toggleAuthForm } from \"../redux/navbar/navbarActions\"\r\nimport PageLoader from \"../components/PageLoader\"\r\nimport { RiChatNewLine } from \"react-icons/ri\"\r\n\r\nfunction AnnouncementPage(props) {\r\n  const [data, setData] = useState({ images: [] })\r\n  const focus = useRef()\r\n  const { fetchData } = useHTTP()\r\n  const tags = useTags()\r\n  const [load, setLoad] = useState(true)\r\n  const [includeBkmarks, setIncludeBkmarks] = useState(false)\r\n  const {\r\n    auth: { token },\r\n    bkmarks: { bookmarks },\r\n  } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const { announcementId } = props.match.params\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const data = await fetchData({\r\n          url: `/announcement/get-announcement/${announcementId}`,\r\n          method: \"get\",\r\n          data: null,\r\n          options: { isLocalStorage: true },\r\n        })\r\n        setData(data)\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n    fetch()\r\n  }, [announcementId, fetchData])\r\n\r\n  const handleFocusForm = () => {\r\n    if (token.token) {\r\n      focus.current.focus()\r\n    } else {\r\n      dispatch(toggleAuthForm())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let isInclude = false\r\n    bookmarks.forEach((item) => {\r\n      if (item._id === data._id) {\r\n        isInclude = true\r\n      }\r\n    })\r\n\r\n    setIncludeBkmarks(isInclude)\r\n  }, [bookmarks, data._id])\r\n\r\n  const getPreviewImage = () => {\r\n    let path\r\n    data.images.forEach((img) => {\r\n      if (img.statusPreview) {\r\n        path = img.path\r\n      }\r\n    })\r\n    return path\r\n  }\r\n\r\n  const handleBookmark = async () => {\r\n    try {\r\n      if (includeBkmarks) {\r\n        dispatch(removeBookmark(data._id))\r\n      } else {\r\n        const announcement = {\r\n          image: getPreviewImage(),\r\n          owner: {\r\n            ava: data.owner.ava,\r\n            typeUser: data.owner.typeUser,\r\n            username: data.owner.username,\r\n            _id: data.owner._id,\r\n          },\r\n          price: data.price,\r\n          tag: data.tag,\r\n          title: data.title,\r\n          _id: data._id,\r\n        }\r\n        dispatch(addBookmark({ ...announcement }))\r\n      }\r\n\r\n      await fetchData({\r\n        url: includeBkmarks ? \"/auth/delete-bookmark\" : \"/auth/create-bookmark\",\r\n        method: includeBkmarks ? \"delete\" : \"post\",\r\n        data: { announcement: data._id, isCreate: !includeBkmarks && true },\r\n        options: { isLocalStorage: true },\r\n      })\r\n    } catch (error) {}\r\n  }\r\n\r\n  const handleTabActive = (id) => {\r\n    setData({\r\n      ...data,\r\n      images: data.images.map((img) => {\r\n        if (img._id === id) {\r\n          if (img.statusPreview) {\r\n            return img\r\n          } else {\r\n            img.statusPreview = true\r\n            return img\r\n          }\r\n        }\r\n\r\n        img.statusPreview = false\r\n        return img\r\n      }),\r\n    })\r\n  }\r\n\r\n  const imgTabs = data.images.map((img) => {\r\n    return (\r\n      <button\r\n        key={img._id}\r\n        className={`details-ad__tab-btn ${\r\n          img.statusPreview && \"details-ad__tab-btn--active\"\r\n        }`}\r\n        onClick={() => handleTabActive(img._id)}\r\n      >\r\n        <img src={img.path} className='details-ad__tab-image' alt='imgTab' />\r\n      </button>\r\n    )\r\n  })\r\n\r\n  const handleMove = (status) => {\r\n    for (let i = 0; i < data.images.length; i++) {\r\n      if (data.images[i].statusPreview) {\r\n        data.images[i].statusPreview = false\r\n\r\n        let previewIndex = status ? i + 1 : i - 1\r\n        if (previewIndex === -1) {\r\n          data.images[data.images.length - 1].statusPreview = true\r\n        } else if (previewIndex === data.images.length) {\r\n          data.images[0].statusPreview = true\r\n        } else {\r\n          data.images[previewIndex].statusPreview = true\r\n        }\r\n        break\r\n      }\r\n    }\r\n\r\n    setData({\r\n      ...data,\r\n      images: data.images,\r\n    })\r\n  }\r\n\r\n  const getTagProps = () => {\r\n    let props\r\n    tags.forEach((tag) => {\r\n      if (tag.param === data.tag) {\r\n        props = tag\r\n      }\r\n    })\r\n\r\n    return props\r\n  }\r\n\r\n  const imagesJSX = data.images.map((img) => {\r\n    return (\r\n      <img\r\n        src={img.path}\r\n        key={img._id}\r\n        className={`details-ad__preview-img ${\r\n          img.statusPreview && \"details-ad__preview-img--active\"\r\n        }`}\r\n        alt='PreviewImg'\r\n      />\r\n    )\r\n  })\r\n\r\n  if (load) {\r\n    return (\r\n      <div className='wrapper'>\r\n        <PageLoader />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const { icon, name } = getTagProps()\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title title-simple'>\r\n        <div className='title__container-name'>\r\n          <AiOutlinePicLeft className='title__icon' />\r\n          <span className='title__name'>Details</span>\r\n        </div>\r\n        <span className='title__description'>Details of: {data.title}</span>\r\n      </div>\r\n      <div className='details-ad'>\r\n        <div className='details-ad__container-imgs'>\r\n          <div className='details-ad__container-preview'>\r\n            {data.images.length ? (\r\n              <>\r\n                {imagesJSX}\r\n                <button\r\n                  className='details-ad__move-btn details-ad__right-btn'\r\n                  onClick={() => handleMove(false)}\r\n                >\r\n                  <BsChevronRight />\r\n                </button>\r\n                <button\r\n                  className='details-ad__move-btn details-ad__left-btn'\r\n                  onClick={() => handleMove(true)}\r\n                >\r\n                  <BsChevronLeft />\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <div className='announc__plug-image'>\r\n                <BsCardImage className='announc__plug-icon' />\r\n                <span className='announc__plug-name'>No Images</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className='details-ad__imgtabs'>\r\n            <div className='details-ad__container-imgtabs'>{imgTabs}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='details-ad__container-info'>\r\n          {token.token &&\r\n            (token.user._id === data.owner._id ? (\r\n              <Link\r\n                className='details-ad__btn-edit link'\r\n                to={`/edit/${data._id}`}\r\n              >\r\n                <BsGear />\r\n              </Link>\r\n            ) : (\r\n              <button\r\n                className={`details-ad__btn-edit link ${\r\n                  includeBkmarks && \"details-ad__bookmark\"\r\n                }`}\r\n                onClick={handleBookmark}\r\n              >\r\n                {includeBkmarks ? <BsBookmarkCheck /> : <BsBookmarkPlus />}\r\n              </button>\r\n            ))}\r\n          <h3 className='details-ad__title'>{data.title}</h3>\r\n          <div className='details-ad__container-price'>\r\n            <button\r\n              className='details-ad__btn-message btn btn-primary'\r\n              onClick={handleFocusForm}\r\n            >\r\n              <RiChatNewLine className='btn__icon' />\r\n              <span className='btn__name'>Ask a question</span>\r\n            </button>\r\n            <div className='details-ad__price'>{data.price} &#8372;</div>\r\n          </div>\r\n          <div className='details-ad__description-title'>Description:</div>\r\n          <div className='details-ad__description'>{data.description}</div>\r\n          <div className='details-ad__extra-info'>\r\n            <div className='details-ad__container-row-info'>\r\n              <div className='details-ad__column-info'>\r\n                <span className='details-ad__column-title'>Category:</span>\r\n                <Link\r\n                  to={`/categories/${data.tag}`}\r\n                  className='details-ad__link btn link'\r\n                >\r\n                  {icon}\r\n                  <span className='btn__name'>{name}</span>\r\n                </Link>\r\n              </div>\r\n              <div className='details-ad__column-info'>\r\n                <span className='details-ad__column-title'>Last updated:</span>\r\n                <span className='details-ad__column-content details-ad__date'>\r\n                  {data.date.slice(0, 10)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className='details-ad__container-row-user'>\r\n              <Link\r\n                to={`/user/${data.owner._id}`}\r\n                className='details-ad__container-ava'\r\n              >\r\n                <img\r\n                  src={data.owner.ava}\r\n                  alt='userImg'\r\n                  className='details-ad__ava'\r\n                />\r\n              </Link>\r\n              <div className='details-ad__container-user-info'>\r\n                <Link\r\n                  to={`/user/${data.owner._id}`}\r\n                  className='details-ad__username'\r\n                >\r\n                  {data.owner.username}\r\n                </Link>\r\n                <span className='details-ad__typeUser'>\r\n                  {data.owner.typeUser === \"admin\" ? (\r\n                    <RiUserSettingsLine className='details-ad__label-icon-type' />\r\n                  ) : (\r\n                    <RiUserLine className='details-ad__label-icon-type' />\r\n                  )}\r\n                  <span className='details-ad__label-user-type'>\r\n                    {data.owner.typeUser}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n              <Link\r\n                to={`/user/${data.owner._id}`}\r\n                className='details-ad__btn-user btn link'\r\n              >\r\n                <span className='btn__name'>Other announce</span>\r\n                <BsArrowRight className='btn__icon' />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Questions announcement={data._id} focus={focus} owner={data.owner._id} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnnouncementPage\r\n","export default __webpack_public_path__ + \"static/media/undraw_data_trends_b0wg.bac34a1c.svg\";","export default __webpack_public_path__ + \"static/media/undraw_content_vbqo.3488cbea.svg\";","import React, { useState, useEffect } from \"react\"\r\nimport { BsInfoCircle, BsFilePlus, BsUpload } from \"react-icons/bs\"\r\nimport { FiPlus, FiEdit } from \"react-icons/fi\"\r\nimport bgCreateImage from \"../imgs/undraw_data_trends_b0wg.svg\"\r\nimport bgEditImage from \"../imgs/undraw_content_vbqo.svg\"\r\nimport { AiOutlineDelete, AiOutlineWarning } from \"react-icons/ai\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { togglePopupWarning, resetNavbar } from \"../redux/navbar/navbarActions\"\r\nimport { FaRegTimesCircle, FaRegCheckCircle } from \"react-icons/fa\"\r\nimport useTags from \"../hooks/useTags\"\r\nimport PageLoader from \"../components/PageLoader\"\r\n\r\nfunction ModPage(props) {\r\n  const { fetchData } = useHTTP()\r\n  const tags = useTags()\r\n  const { announcementId } = props.match.params\r\n  const [load, setLoad] = useState(true)\r\n  const { popupWarning } = useSelector((state) => state.navbar)\r\n  const dispatch = useDispatch()\r\n  const [form, setForm] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const data = await fetchData({\r\n          url: `/announcement/get-announcement_for_edit/${announcementId}`,\r\n          method: \"get\",\r\n          data: null,\r\n          options: { isLocalStorage: true },\r\n        })\r\n\r\n        setForm((prevForm) =>\r\n          prevForm.map((item) => {\r\n            Object.keys(data).forEach((key) => {\r\n              if (item.param === key) {\r\n                item.value = data[key]\r\n              }\r\n            })\r\n            return item\r\n          })\r\n        )\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n\r\n    setForm([\r\n      {\r\n        param: \"title\",\r\n        name: \"Title\",\r\n        value: \"\",\r\n        msg: \"Give some name to your announcement\",\r\n      },\r\n      {\r\n        param: \"description\",\r\n        name: \"Description\",\r\n        value: \"\",\r\n        msg: \"Describe what you want to expose, give some characteristics\",\r\n      },\r\n      {\r\n        param: \"tag\",\r\n        name: \"Tag name\",\r\n        value: \"electronics\",\r\n        msg:\r\n          \"Tag name is the name of the category to which you want to place your announcement\",\r\n      },\r\n      {\r\n        param: \"price\",\r\n        name: \"Price\",\r\n        value: \"0\",\r\n        msg:\r\n          \"The price of exhibited product or service (It is not a required attribute)\",\r\n      },\r\n      {\r\n        param: \"imagesAnnouncements\",\r\n        name: \"Images\",\r\n        value: {},\r\n        msg:\r\n          \"Attach images of the exhibited product or images that associate this announcement\",\r\n      },\r\n      {\r\n        param: \"indexPreviewImage\",\r\n        name: \"Preview image\",\r\n        value: \"0\",\r\n        msg: \"Select preview image among chosen\",\r\n      },\r\n    ])\r\n\r\n    if (announcementId) {\r\n      fetch()\r\n    }\r\n    setLoad(false)\r\n  }, [announcementId, fetchData])\r\n\r\n  const handleChange = (e) => {\r\n    setForm(\r\n      form.map((item) => {\r\n        if (item.param === e.target.name) {\r\n          if (item.param === \"imagesAnnouncements\") {\r\n            item.value = e.target.files\r\n          } else {\r\n            item.value = e.target.value\r\n          }\r\n        }\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  const isEmptyFields = () => {\r\n    let isEmpty = false\r\n    form.forEach((item) => {\r\n      if (typeof item.value === \"string\" && !item.value.trim().length) {\r\n        if (\r\n          item.param === \"imagesAnnouncements\" ||\r\n          item.param === \"indexPreviewImage\" ||\r\n          item.value === 0 ||\r\n          item.value > 0\r\n        ) {\r\n          return\r\n        }\r\n        isEmpty = true\r\n      }\r\n    })\r\n    return isEmpty\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      let fd = new FormData()\r\n\r\n      form.forEach((item) => {\r\n        if (item.param === \"imagesAnnouncements\") {\r\n          Array.prototype.forEach.call(item.value, (file) => {\r\n            fd.append(\"imagesAnnouncements\", file, file.name)\r\n          })\r\n        } else {\r\n          fd.set(item.param, item.value)\r\n        }\r\n      })\r\n\r\n      const data = await fetchData({\r\n        url: announcementId\r\n          ? `/announcement/edit-announcement/${announcementId}`\r\n          : \"/announcement/create-announcement\",\r\n        method: \"post\",\r\n        data: fd,\r\n        options: { isLocalStorage: true },\r\n      })\r\n\r\n      props.history.push(`/details/${data.id}`)\r\n    } catch (error) {}\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    dispatch(resetNavbar())\r\n    await fetchData({\r\n      url: `/announcement/delete-announcement/${announcementId}`,\r\n      method: \"delete\",\r\n      data: null,\r\n      options: { isLocalStorage: true },\r\n    })\r\n\r\n    let tagName\r\n    form.forEach((item) => {\r\n      if (item.param === \"tag\") {\r\n        tagName = item.value\r\n      }\r\n    })\r\n    props.history.push(`/categories/${tagName}`)\r\n  }\r\n\r\n  const fields = form.map((item) => {\r\n    if (item.param === \"tag\") {\r\n      return (\r\n        <div className='field field-select' key={item.param}>\r\n          <div className='field__container-info'>\r\n            <span className='field__name'>{item.name}</span>\r\n            <div className='field__container-msg'>\r\n              <BsInfoCircle className='field__icon field__info-icon' />\r\n              <span className='field__msg field__msg-info'>\r\n                {item.msg}\r\n                <span className='field__triangle'></span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <select\r\n            className='field__select btn'\r\n            name={item.param}\r\n            value={item.value}\r\n            onChange={handleChange}\r\n          >\r\n            {tags.map((tag) => {\r\n              return (\r\n                <option\r\n                  value={tag.param}\r\n                  key={tag.param}\r\n                  className='field__option'\r\n                >\r\n                  {tag.name}\r\n                </option>\r\n              )\r\n            })}\r\n          </select>\r\n        </div>\r\n      )\r\n    } else if (item.param === \"description\") {\r\n      return (\r\n        <label key={item.param} className='field field-custom-height'>\r\n          <div className='field__container-info'>\r\n            <span className='field__name'>{item.name}:</span>\r\n            <div className='field__container-msg'>\r\n              <BsInfoCircle className='field__icon field__info-icon' />\r\n              <span className='field__msg field__msg-info'>\r\n                {item.msg}\r\n                <span className='field__triangle'></span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <textarea\r\n            name={item.param}\r\n            value={item.value}\r\n            onChange={handleChange}\r\n            className='field__textarea'\r\n          ></textarea>\r\n        </label>\r\n      )\r\n    } else if (item.param === \"imagesAnnouncements\") {\r\n      return (\r\n        <div key={item.param} className='field field-select'>\r\n          <div className='field__container-info'>\r\n            <span className='field__name'>{item.name}</span>\r\n            <div className='field__container-msg'>\r\n              <BsInfoCircle className='field__icon field__info-icon' />\r\n              <span className='field__msg field__msg-info'>\r\n                {item.msg}\r\n                <span className='field__triangle'></span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <label className='field__label-file btn'>\r\n            <BsUpload className='btn__icon' />{\" \"}\r\n            <span className='btn__name'>\r\n              {announcementId ? \"Reselect images\" : \"Select images\"}\r\n            </span>\r\n            <input\r\n              type='file'\r\n              name={item.param}\r\n              multiple\r\n              onChange={handleChange}\r\n              className='field__input-handler'\r\n            />\r\n          </label>\r\n        </div>\r\n      )\r\n    } else if (item.param === \"indexPreviewImage\") {\r\n      let images = {}\r\n      form.forEach((item) => {\r\n        if (item.param === \"imagesAnnouncements\") {\r\n          images = item.value\r\n        }\r\n      })\r\n      return (\r\n        <div\r\n          className={`field field-select ${\r\n            Object.entries(images).length === 0 && \"field-select--close\"\r\n          }`}\r\n          key={item.param}\r\n        >\r\n          <div className='field__container-info'>\r\n            <span className='field__name'>{item.name}</span>\r\n            <div className='field__container-msg'>\r\n              <BsInfoCircle className='field__icon field__info-icon' />\r\n              <span className='field__msg field__msg-info'>\r\n                {item.msg}\r\n                <span className='field__triangle'></span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <select\r\n            className='field__select btn'\r\n            name={item.param}\r\n            value={item.value}\r\n            onChange={handleChange}\r\n          >\r\n            {images &&\r\n              Array.prototype.map.call(images, (file, index) => {\r\n                return (\r\n                  <option\r\n                    key={file.name}\r\n                    value={index}\r\n                    className='field__option'\r\n                  >\r\n                    {file.name}\r\n                  </option>\r\n                )\r\n              })}\r\n          </select>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <label key={item.param} className='field'>\r\n        <div className='field__container-info'>\r\n          <span className='field__name'>{item.name}:</span>\r\n          <div className='field__container-msg'>\r\n            <BsInfoCircle className='field__icon field__info-icon' />\r\n            <span className='field__msg field__msg-info'>\r\n              {item.msg}\r\n              <span className='field__triangle'></span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <input\r\n          className='field__input'\r\n          type='text'\r\n          value={item.value}\r\n          name={item.param}\r\n          onChange={handleChange}\r\n          autoComplete='off'\r\n        />\r\n      </label>\r\n    )\r\n  })\r\n\r\n  if (load) {\r\n    return (\r\n      <div className='wrapper'>\r\n        <PageLoader />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title title-simple'>\r\n        <div className='title__container-name'>\r\n          {announcementId ? (\r\n            <FiEdit className='title__icon' />\r\n          ) : (\r\n            <BsFilePlus className='title__icon' />\r\n          )}\r\n          <span className='title__name'>\r\n            {announcementId ? \"Edit\" : \"Create\"}\r\n          </span>\r\n        </div>\r\n        <span className='title__description'>\r\n          {announcementId\r\n            ? \"Edit or delete your announcement\"\r\n            : \"Create new announcement\"}\r\n        </span>\r\n      </div>\r\n\r\n      <div className={`popup ${popupWarning && \"popup--active\"}`}>\r\n        <div className='popup__container-info'>\r\n          <AiOutlineWarning className='popup__icon' />\r\n          <span className='popup__title'>WARNING</span>\r\n          <p className='popup__description'>Are you sure about that?</p>\r\n        </div>\r\n        <div className='popup__container-bts'>\r\n          <button className='btn btn-warning' onClick={handleDelete}>\r\n            <FaRegCheckCircle className='btn__icon' />\r\n            <span className='btn__name'>Yes</span>\r\n          </button>\r\n          <button\r\n            className='btn btn-simple'\r\n            onClick={() => dispatch(resetNavbar())}\r\n          >\r\n            <FaRegTimesCircle className='btn__icon' />\r\n            <span className='btn__name'>No</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form'>\r\n        <div className='form__main-side'>\r\n          <form className='form__container-fields' onSubmit={handleSubmit}>\r\n            {fields}\r\n            <button className='form__btn-handler'></button>\r\n          </form>\r\n          <div className='form__container-btns'>\r\n            <button\r\n              className={`btn ${\r\n                isEmptyFields()\r\n                  ? \"btn-disabled\"\r\n                  : announcementId\r\n                  ? \"btn-simple\"\r\n                  : \"btn-success\"\r\n              }`}\r\n              onClick={isEmptyFields() ? () => {} : handleSubmit}\r\n            >\r\n              <div className='btn__msg'>\r\n                Fill all fields!\r\n                <span className='btn__triangle'></span>\r\n              </div>\r\n              {announcementId ? (\r\n                <FiEdit className='btn__icon' />\r\n              ) : (\r\n                <FiPlus className='btn__icon' />\r\n              )}\r\n              <span className='btn__name'>\r\n                {announcementId ? \"Edit\" : \"Create\"}\r\n              </span>\r\n            </button>\r\n\r\n            {announcementId && (\r\n              <button\r\n                className='btn btn-danger'\r\n                onClick={() => dispatch(togglePopupWarning())}\r\n              >\r\n                <AiOutlineDelete className='btn__icon' />\r\n                <span className='btn__name'>Delete</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='form__bg-side'>\r\n          <img\r\n            src={announcementId ? bgEditImage : bgCreateImage}\r\n            alt='bgImage'\r\n            className='form__image'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModPage\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport { RiUserSettingsLine, RiUserLine } from \"react-icons/ri\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { FiPhoneCall, FiMail } from \"react-icons/fi\"\r\nimport PageLoader from \"../components/PageLoader\"\r\nimport {\r\n  BsBookmarks,\r\n  BsCollection,\r\n  BsGear,\r\n  BsCardImage,\r\n  BsTools,\r\n  BsX,\r\n  BsCheck,\r\n  BsInfoCircle,\r\n  BsUpload,\r\n} from \"react-icons/bs\"\r\nimport useTags from \"../hooks/useTags\"\r\nimport {\r\n  updateStart,\r\n  updateSuccess,\r\n  updateFailure,\r\n  setError,\r\n  clearSpecificError,\r\n  clearErrors,\r\n  updateAvatar,\r\n} from \"../redux/auth/authActions\"\r\nimport { togglePopupImage, resetNavbar } from \"../redux/navbar/navbarActions\"\r\n\r\nfunction UserPage(props) {\r\n  let {\r\n    auth: {\r\n      error,\r\n      load: formLoad,\r\n      token: { user },\r\n    },\r\n    navbar: { popupImage },\r\n  } = useSelector((state) => state)\r\n\r\n  const { userId } = props.match.params\r\n  const dispatch = useDispatch()\r\n  const [announcements, setAnnouncements] = useState([])\r\n  const { fetchData } = useHTTP()\r\n  const [load, setLoad] = useState(true)\r\n  const [statusPage, setStatusPage] = useState(0)\r\n  const [reset, setReset] = useState(false)\r\n  const [userOther, setUserOther] = useState({})\r\n  const tags = useTags()\r\n\r\n  const initialForm = [\r\n    { param: \"username\", name: \"Username\", value: user ? user.username : \"\" },\r\n    { param: \"email\", name: \"Email\", value: user ? user.email : \"\" },\r\n    {\r\n      param: \"firstname\",\r\n      name: \"Firstname\",\r\n      value: user ? user.firstname : \"\",\r\n    },\r\n    { param: \"lastname\", name: \"Lastname\", value: user ? user.lastname : \"\" },\r\n    { param: \"address\", name: \"Address\", value: user ? user.address : \"\" },\r\n    { param: \"phone\", name: \"Phone\", value: user ? user.phone : \"\" },\r\n    {\r\n      param: \"brief\",\r\n      name: \"Bio\",\r\n      value: user ? user.brief : \"\",\r\n      placeholder: \"Type something about yourself, about your profession\",\r\n    },\r\n    {\r\n      param: \"contacts\",\r\n      name: \"Other contacts\",\r\n      value: user ? user.contacts : \"\",\r\n      placeholder:\r\n        \"Here you can add extra contacts or write how other can get in touch with you\",\r\n    },\r\n  ]\r\n\r\n  const [form, setForm] = useState(initialForm)\r\n\r\n  useEffect(() => {\r\n    setReset(false)\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        if (userId) {\r\n          const userData = await fetchData({\r\n            url: `/auth/get-user/${userId}`,\r\n            method: \"get\",\r\n            data: null,\r\n            options: { isLocalStorage: true },\r\n          })\r\n          setUserOther(userData)\r\n        }\r\n        const announceData = await fetchData({\r\n          url: `/announcement/get-user-announcements/${\r\n            userId ? userId : user._id\r\n          }`,\r\n          method: \"get\",\r\n          data: null,\r\n          options: { isLocalStorage: true },\r\n        })\r\n        setAnnouncements(announceData)\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n    fetch()\r\n  }, [fetchData, user, userId])\r\n\r\n  const handleChangeFile = (e) => {\r\n    const ava = e.target.files[0]\r\n    if (!ava) {\r\n      return\r\n    }\r\n    let data = new FormData()\r\n    data.append(\"avatar\", ava, ava.name)\r\n\r\n    dispatch(\r\n      fetchData({\r\n        url: \"/auth/update-user-image\",\r\n        method: \"post\",\r\n        data,\r\n        options: { fetchSuccess: updateAvatar },\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    if (!reset) {\r\n      setReset(true)\r\n    }\r\n    setForm(\r\n      form.map((item) => {\r\n        if (item.param === e.target.name) {\r\n          item.value = e.target.value\r\n          dispatch(clearSpecificError(item))\r\n        }\r\n        return item\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!reset) {\r\n      return\r\n    }\r\n\r\n    let isError = false\r\n    form.forEach((item) => {\r\n      if (\r\n        (item.param === \"username\" || item.param === \"email\") &&\r\n        !item.value\r\n      ) {\r\n        dispatch(setError(item))\r\n        isError = true\r\n      }\r\n    })\r\n    if (isError) {\r\n      return\r\n    }\r\n\r\n    let data = {}\r\n    form.forEach((elem) => {\r\n      data[elem.param] = elem.value\r\n    })\r\n\r\n    dispatch(\r\n      fetchData({\r\n        url: \"/auth/update-user\",\r\n        method: \"post\",\r\n        data,\r\n        options: {\r\n          fetchStart: updateStart,\r\n          fetchSuccess: updateSuccess,\r\n          fetchFailure: updateFailure,\r\n        },\r\n      })\r\n    )\r\n  }\r\n\r\n  const getMsg = (item) => {\r\n    let msg = \"\"\r\n    error.forEach((err) => {\r\n      if (item.param === err.param) {\r\n        msg = err.msg\r\n      }\r\n    })\r\n    return msg\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setForm(initialForm)\r\n    setReset(false)\r\n    dispatch(clearErrors())\r\n  }\r\n\r\n  const fields = form.map((item) => {\r\n    const msg = getMsg(item)\r\n    if (item.param === \"brief\" || item.param === \"contacts\") {\r\n      return (\r\n        <label key={item.param} className='field field-custom-height'>\r\n          <div className='field__container-info'>\r\n            <span className='field__name'>{item.name}:</span>\r\n          </div>\r\n          <textarea\r\n            className='field__textarea field__textarea-short'\r\n            name={item.param}\r\n            value={item.value}\r\n            onChange={handleChange}\r\n            placeholder={item.placeholder}\r\n          ></textarea>\r\n        </label>\r\n      )\r\n    }\r\n    return (\r\n      <label key={item.param} className='field'>\r\n        <div className='field__container-info'>\r\n          <span\r\n            className={`field__name ${\r\n              (item.param === \"username\" || item.param === \"email\") &&\r\n              \"field__important\"\r\n            }`}\r\n          >\r\n            {item.name}:\r\n          </span>\r\n          <div\r\n            className={`field__container-msg ${\r\n              !msg && \"field__container-msg--close\"\r\n            }`}\r\n          >\r\n            <BsInfoCircle className='field__icon' />\r\n            <span className='field__msg'>\r\n              {msg}\r\n              <span className='field__triangle'></span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <input\r\n          className={`field__input ${msg && \"field__input--warning\"}`}\r\n          type={item.param === \"email\" ? \"email\" : \"text\"}\r\n          value={item.value}\r\n          name={item.param}\r\n          onChange={handleChange}\r\n          autoComplete='off'\r\n        />\r\n      </label>\r\n    )\r\n  })\r\n\r\n  const getTagProps = (announce) => {\r\n    let tagProps\r\n    tags.forEach((tag) => {\r\n      if (tag.param === announce.tag) {\r\n        tagProps = tag\r\n      }\r\n    })\r\n    return tagProps\r\n  }\r\n\r\n  const getStatus = (id) => {\r\n    if (id === statusPage) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const handleTab = (id) => {\r\n    setStatusPage(id)\r\n  }\r\n\r\n  const announcementsJSX = announcements.map((item) => {\r\n    const { icon, name } = getTagProps(item)\r\n    return (\r\n      <div className='announc-item' key={item._id}>\r\n        <Link className='announc-item__image-side' to={`/details/${item._id}`}>\r\n          {item.image ? (\r\n            <img\r\n              src={item.image}\r\n              className='announc-item__image'\r\n              alt='AnnounceImg'\r\n            />\r\n          ) : (\r\n            <div className='announc-item__plug bookmark__plug-image'>\r\n              <BsCardImage className='announc-item__plug-icon bookmark__plug-icon' />\r\n              <span className='announc-item__plug-name bookmark__plug-name'>\r\n                No Images\r\n              </span>\r\n            </div>\r\n          )}\r\n          <span className='announc-item__date'>{item.date.slice(0, 10)}</span>\r\n        </Link>\r\n\r\n        <div className='announc-item__content-side'>\r\n          <Link className='announc-item__title' to={`/details/${item._id}`}>\r\n            {item.title}\r\n          </Link>\r\n          <div className='bookmark__container-category'>\r\n            Category:\r\n            <Link\r\n              className='bookmark__category btn link'\r\n              to={`/categories/${item.tag}`}\r\n            >\r\n              {icon}\r\n              <span className='btn__name'>{name}</span>\r\n            </Link>\r\n          </div>\r\n          <div className='announc-item__price'>\r\n            {item.price}\r\n            <span className='bookmark__grivna-sign'>&#8372;</span>\r\n          </div>\r\n        </div>\r\n        {!userId && (\r\n          <Link\r\n            className='announc-item__btn-edit btn link'\r\n            to={`/edit/${item._id}`}\r\n          >\r\n            <BsGear />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    )\r\n  })\r\n\r\n  let btnTabs = [\r\n    { name: \"Announcements\", icon: <BsCollection className='btn__icon' /> },\r\n    { name: \"Contacts\", icon: <FiPhoneCall className='btn__icon' /> },\r\n    { name: \"Settings\", icon: <BsTools className='btn__icon' /> },\r\n  ]\r\n  const contacts = [\r\n    { name: \"Firstname\", value: userId ? userOther.firstname : user.firstname },\r\n    { name: \"Lastname\", value: userId ? userOther.lastname : user.lastname },\r\n    { name: \"Email\", value: userId ? userOther.email : user.email },\r\n    { name: \"Phone\", value: userId ? userOther.phone : user.phone },\r\n    { name: \"Address\", value: userId ? userOther.address : user.address },\r\n    {\r\n      name: \"Other contacts\",\r\n      value: userId ? userOther.contacts : user.contacts,\r\n    },\r\n  ]\r\n\r\n  userId && btnTabs.pop()\r\n  const btnTabsJSX = btnTabs.map((btn, index) => {\r\n    return (\r\n      <button\r\n        key={btn.name}\r\n        className={`user__btntab btn ${\r\n          getStatus(index) && \"user__btntab--active\"\r\n        }`}\r\n        onClick={() => handleTab(index)}\r\n      >\r\n        {btn.icon}\r\n        <span className='btn__name'>{btn.name}</span>\r\n      </button>\r\n    )\r\n  })\r\n\r\n  const contactsJSX = contacts.map((item) => {\r\n    return (\r\n      <div className='user__contact-name' key={item.name}>\r\n        {item.name}:\r\n        <span\r\n          className={`user__contact ${\r\n            item.name === \"Other contacts\" && \"user__other-contact\"\r\n          }`}\r\n        >\r\n          {item.value ? (\r\n            item.value\r\n          ) : (\r\n            <span className='user__contact-plug'>(Empty)</span>\r\n          )}\r\n        </span>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  if (load) {\r\n    return (\r\n      <div className='wrapper'>\r\n        <PageLoader />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  user = userId ? userOther : user\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className={`popup-img ${popupImage && \"popup-img--active\"}`}>\r\n        <button\r\n          className='auth-form__btn btn'\r\n          onClick={() => dispatch(resetNavbar())}\r\n        >\r\n          <BsX />\r\n        </button>\r\n        <div className='popup-img__container-ava'>\r\n          <img src={user.ava} className='popup-img__ava' alt='popupImg' />\r\n        </div>\r\n        <span className='popup-img__username'>{user.username}</span>\r\n      </div>\r\n      <div className='title title-simple'>\r\n        <div className='title__container-name'>\r\n          <RiUserLine />\r\n          <span className='title__name'>Profile</span>\r\n        </div>\r\n        <span className='title__description'>\r\n          {userId ? \"User personal cabinet\" : \"Your personal cabinet\"}\r\n        </span>\r\n      </div>\r\n      <div className='user'>\r\n        <div className='user__image-side'>\r\n          <div className='user__brief'>\r\n            {userId ? (\r\n              <button\r\n                className='user__btn-img'\r\n                onClick={() => dispatch(togglePopupImage())}\r\n              >\r\n                <img src={user.ava} className='user__image' alt='userAva' />\r\n              </button>\r\n            ) : (\r\n              <label className='user__btn-img'>\r\n                <span className='user__background-ava'>\r\n                  <BsUpload className='user__upload-icon' />\r\n                  <span className='user__upload-name'>Update image</span>\r\n                </span>\r\n                <img src={user.ava} className='user__image' alt='userAva' />\r\n                <input\r\n                  className='user__file-handler'\r\n                  type='file'\r\n                  onChange={handleChangeFile}\r\n                />\r\n              </label>\r\n            )}\r\n            {user.typeUser === \"admin\" ? (\r\n              <RiUserSettingsLine className='user__type-icon' />\r\n            ) : (\r\n              <RiUserLine className='user__type-icon' />\r\n            )}\r\n          </div>\r\n          <h3 className='user__username'>{user.username}</h3>\r\n          <div className='user__fullname'>\r\n            ({user.lastname ? user.lastname : \"Lastname\"}{\" \"}\r\n            {user.firstname ? user.firstname : \"Firstname\"})\r\n          </div>\r\n          <div className='user__brief-info'>\r\n            {user.brief ? (\r\n              user.brief\r\n            ) : userId ? (\r\n              <span className='user__plug-text'>\r\n                Nothing about this user or his profession\r\n              </span>\r\n            ) : (\r\n              <span>\r\n                Type something about yourself, about your profession..{\" \"}\r\n                <button\r\n                  className='user__link-edit'\r\n                  onClick={() => handleTab(2)}\r\n                >\r\n                  Edit info\r\n                </button>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className='user__container-email'>\r\n            <FiMail />\r\n            <span className='user__email'>{user.email}</span>\r\n          </div>\r\n          {!userId && (\r\n            <Link\r\n              to='/bookmarks'\r\n              className='user__btn-bookmarks btn btn-primary'\r\n            >\r\n              <BsBookmarks className='btn__icon' />\r\n              <span className='btn__name'>Bookmarks</span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        <div className='user__content-side'>\r\n          <div className='user__container-btntabs'>{btnTabsJSX}</div>\r\n          <div className='user__pagetabs'>\r\n            <div\r\n              className={`user__tabpage ${\r\n                getStatus(0) && \"user__tabpage--open\"\r\n              }`}\r\n            >\r\n              {announcementsJSX.length ? (\r\n                announcementsJSX\r\n              ) : (\r\n                <div className='plug-text'>No Announcements</div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`user__tabpage ${\r\n                getStatus(1) && \"user__tabpage--open\"\r\n              }`}\r\n            >\r\n              <div className='user__container-contacts'>{contactsJSX}</div>\r\n            </div>\r\n            {!userId && (\r\n              <div\r\n                className={`user__tabpage ${\r\n                  getStatus(2) && \"user__tabpage--open\"\r\n                }`}\r\n              >\r\n                <div className='user-form'>\r\n                  <div\r\n                    className={`auth-form__loader ${\r\n                      formLoad && \"auth-form__loader--active\"\r\n                    }`}\r\n                  >\r\n                    <div className='auth-form__spinner'></div>\r\n                  </div>\r\n                  <form className='user-form__fields' onSubmit={handleSubmit}>\r\n                    {fields}\r\n                    <button className='user-form__btn-handler'></button>\r\n                  </form>\r\n                  <div className='user-form__container-btns'>\r\n                    <div className='user-form__date-container'>\r\n                      <span className='user-form__date-label'>\r\n                        Last updated:\r\n                      </span>\r\n                      <span className='user-form__date'>\r\n                        {user.date.slice(0, 10)}\r\n                      </span>\r\n                    </div>\r\n                    <button\r\n                      className={`user-form__btn-cancel btn btn-simple ${\r\n                        reset && \"user-form__btn-cancel--show\"\r\n                      }`}\r\n                      onClick={handleReset}\r\n                    >\r\n                      <BsX className='btn__icon' />\r\n                      <span className='btn__name'>Cancel</span>\r\n                    </button>\r\n                    <button\r\n                      className={`user-form__btn-apply btn btn-primary ${\r\n                        !reset && \"btn-disabled\"\r\n                      }`}\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      <div className='btn__msg'>\r\n                        Change some field to apply!\r\n                        <span className='btn__triangle'></span>\r\n                      </div>\r\n                      <BsCheck className='btn__icon' />\r\n                      <span className='btn__name'>Apply</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserPage\r\n","import React, { useEffect, useState } from \"react\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport { RiUserSettingsLine, RiUserLine } from \"react-icons/ri\"\r\nimport { BsX } from \"react-icons/bs\"\r\nimport { FiUsers } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport PageLoader from \"../components/PageLoader\"\r\n\r\nfunction UsersPage(props) {\r\n  const { fetchData } = useHTTP()\r\n  const [data, setData] = useState([])\r\n  const [load, setLoad] = useState(true)\r\n  const {\r\n    auth: { token },\r\n  } = useSelector((state) => state)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const data = await fetchData({\r\n          url: \"/auth/get-users\",\r\n          method: \"get\",\r\n          data: null,\r\n          options: { isLocalStorage: true },\r\n        })\r\n        setData(data)\r\n        setLoad(false)\r\n      } catch (error) {}\r\n    }\r\n    fetch()\r\n  }, [fetchData])\r\n\r\n  const handleRemoveUser = (e) => {\r\n    e.stopPropagation()\r\n    console.log(\"qwe\")\r\n  }\r\n\r\n  const handleRedirectUser = (id) => {\r\n    props.history.push(`/user/${id}`)\r\n  }\r\n\r\n  const users = data.map((user) => {\r\n    return (\r\n      <div\r\n        key={user._id}\r\n        onClick={() => handleRedirectUser(user._id)}\r\n        className='user-link'\r\n      >\r\n        {token.user && token.user.typeUser === \"admin\" && (\r\n          <button\r\n            className='user-link__btn-delete btn'\r\n            onClick={handleRemoveUser}\r\n          >\r\n            <BsX />\r\n          </button>\r\n        )}\r\n        <div className='user-link__container-img'>\r\n          <img className='user-link__img' src={user.ava} alt='userAva' />\r\n        </div>\r\n        <div className='user-link__info'>\r\n          {user.typeUser === \"admin\" ? (\r\n            <RiUserSettingsLine className='user-link__icon' />\r\n          ) : (\r\n            <RiUserLine className='user-link__icon' />\r\n          )}\r\n          <span className='user-link__username'>{user.username}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  if (load) {\r\n    return (\r\n      <div className='wrapper'>\r\n        <PageLoader />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title'>\r\n        <div className='title__container-name'>\r\n          <FiUsers />\r\n          <span className='title__name'>Users</span>\r\n        </div>\r\n        <span className='title__description'>All registered users</span>\r\n      </div>\r\n      <div className='users'>{users}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersPage\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport useTags from \"../hooks/useTags\"\r\nimport { BsX, BsBookmarks, BsCardImage } from \"react-icons/bs\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { removeBookmark } from \"../redux/bookmarks/bookmarksActions\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\n\r\nfunction BookmarksPage() {\r\n  const {\r\n    bkmarks: { bookmarks },\r\n  } = useSelector((state) => state)\r\n  const tags = useTags()\r\n  const dispatch = useDispatch()\r\n  const { fetchData } = useHTTP()\r\n\r\n  const getTagProps = (announce) => {\r\n    let tagProps\r\n    tags.forEach((tag) => {\r\n      if (tag.param === announce.tag) {\r\n        tagProps = tag\r\n      }\r\n    })\r\n    return tagProps\r\n  }\r\n\r\n  const handleRemove = async (announId) => {\r\n    try {\r\n      dispatch(removeBookmark(announId))\r\n\r\n      await fetchData({\r\n        url: \"/auth/delete-bookmark\",\r\n        method: \"delete\",\r\n        data: { announcement: announId },\r\n        options: { isLocalStorage: true },\r\n      })\r\n    } catch (error) {}\r\n  }\r\n\r\n  const bookmarksJSX = bookmarks.map((item) => {\r\n    const { icon, name } = getTagProps(item)\r\n    return (\r\n      <div className='bookmark' key={item._id}>\r\n        <div className='bookmark__image-side'>\r\n          <Link to={`/details/${item._id}`} className='bookmark__container-img'>\r\n            {item.image ? (\r\n              <img\r\n                src={item.image}\r\n                className='bookmark__img'\r\n                alt='AnnounceImg'\r\n              />\r\n            ) : (\r\n              <div className='bookmark__plug-image'>\r\n                <BsCardImage className='bookmark__plug-icon' />\r\n                <span className='bookmark__plug-name'>No Images</span>\r\n              </div>\r\n            )}\r\n          </Link>\r\n          <div className='bookmark__price'>\r\n            {item.price}\r\n            <span className='bookmark__grivna-sign'>&#8372;</span>\r\n          </div>\r\n        </div>\r\n        <div className='bookmark__content-side'>\r\n          <Link className='bookmark__title' to={`/details/${item._id}`}>\r\n            {item.title}\r\n          </Link>\r\n          <div className='bookmark__container-category'>\r\n            Category:\r\n            <Link\r\n              className='bookmark__category btn link'\r\n              to={`/categories/${item.tag}`}\r\n            >\r\n              {icon}\r\n              <span className='btn__name'>{name}</span>\r\n            </Link>\r\n          </div>\r\n          <Link to={`/user/${item.owner._id}`} className='bookmark__owner'>\r\n            <span className='bookmark__container-ava'>\r\n              <img\r\n                src={item.owner.ava}\r\n                className='bookmark__ava'\r\n                alt='userAva'\r\n              />\r\n            </span>\r\n            <span className='bookmark__username'>{item.owner.username}</span>\r\n          </Link>\r\n        </div>\r\n        <button\r\n          className='bookmark__btn-delete btn link'\r\n          onClick={() => handleRemove(item._id)}\r\n        >\r\n          <BsX />\r\n        </button>\r\n      </div>\r\n    )\r\n  })\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title'>\r\n        <div className='title__container-name'>\r\n          <BsBookmarks />\r\n          <span className='title__name'>Bookmarks</span>\r\n        </div>\r\n        <span className='title__description'>Your favourite announcements</span>\r\n      </div>\r\n      <div className='bookmarks'>\r\n        {bookmarksJSX.length ? (\r\n          bookmarksJSX\r\n        ) : (\r\n          <div className='plug-text'>No bookmarks</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookmarksPage\r\n","import React, { useEffect } from \"react\"\r\nimport { Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport useHTTP from \"../hooks/useHTTP\"\r\nimport { resetNavbar } from \"../redux/navbar/navbarActions\"\r\nimport { fetchSuccess } from \"../redux/bookmarks/bookmarksActions\"\r\n\r\nimport Auth from \"../components/Auth\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport MainPage from \"../pages/MainPage\"\r\nimport CategoriesPage from \"../pages/CategoriesPage\"\r\nimport AnnouncementsPage from \"../pages/AnnouncementsPage\"\r\nimport AnnouncementPage from \"../pages/AnnouncementPage\"\r\nimport ModPage from \"../pages/ModPage\"\r\nimport UserPage from \"../pages/UserPage\"\r\nimport UsersPage from \"../pages/UsersPage\"\r\nimport BookmarksPage from \"../pages/BookmarksPage\"\r\n\r\nfunction Routes() {\r\n  const {\r\n    auth: { token },\r\n    navbar: { dropMenu, authForm, popupWarning, popupImage },\r\n  } = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const { fetchData } = useHTTP()\r\n\r\n  useEffect(() => {\r\n    if (token.token) {\r\n      dispatch(\r\n        fetchData({\r\n          url: \"/auth/get-bookmarks\",\r\n          method: \"get\",\r\n          data: null,\r\n          options: { fetchSuccess },\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, fetchData, token.token])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Auth />\r\n      <div\r\n        onClick={() => dispatch(resetNavbar())}\r\n        className={`background ${\r\n          (dropMenu || authForm || popupWarning || popupImage) &&\r\n          \"background--active\"\r\n        }`}\r\n      ></div>\r\n      {token.token ? (\r\n        token.user.typeUser === \"user\" ? (\r\n          <Switch>\r\n            <Route exact path='/' component={MainPage} />\r\n            <Route path='/search' component={AnnouncementsPage} />\r\n            <Route exact path='/categories' component={CategoriesPage} />\r\n            <Route path='/create' component={ModPage} />\r\n            <Route path='/users' component={UsersPage} />\r\n            <Route exact path='/user' component={UserPage} />\r\n            <Route path='/bookmarks' component={BookmarksPage} />\r\n            <Route\r\n              path='/categories/:categoryName'\r\n              component={AnnouncementsPage}\r\n            />\r\n            <Route\r\n              path='/details/:announcementId'\r\n              component={AnnouncementPage}\r\n            />\r\n            <Route path='/edit/:announcementId' component={ModPage} />\r\n            <Route path='/user/:userId' component={UserPage} />\r\n            <Redirect to='/' />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route exact path='/' component={MainPage} />\r\n            <Route path='/search' component={AnnouncementsPage} />\r\n            <Route exact path='/categories' component={CategoriesPage} />\r\n            <Route path='/create' component={ModPage} />\r\n            <Route path='/users' component={UsersPage} />\r\n            <Route exact path='/user' component={UserPage} />\r\n            <Route path='/bookmarks' component={BookmarksPage} />\r\n            <Route\r\n              path='/categories/:categoryName'\r\n              component={AnnouncementsPage}\r\n            />\r\n            <Route\r\n              path='/details/:announcementId'\r\n              component={AnnouncementPage}\r\n            />\r\n            <Route path='/edit/:announcementId' component={ModPage} />\r\n            <Route path='/user/:userId' component={UserPage} />\r\n            <Redirect to='/' />\r\n          </Switch>\r\n        )\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path='/' component={MainPage} />\r\n          <Route path='/search' component={AnnouncementsPage} />\r\n          <Route exact path='/categories' component={CategoriesPage} />\r\n          <Route path='/users' component={UsersPage} />\r\n          <Route\r\n            path='/categories/:categoryName'\r\n            component={AnnouncementsPage}\r\n          />\r\n          <Route path='/details/:announcementId' component={AnnouncementPage} />\r\n          <Route path='/user/:userId' component={UserPage} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from \"react\"\r\nimport { FaBuysellads } from \"react-icons/fa\"\r\nimport PageLoader from \"./PageLoader\"\r\n\r\nfunction MainLoader() {\r\n  return (\r\n    <>\r\n      <div className='logo'>\r\n        <PageLoader />\r\n        <div className='logo__container'>\r\n          <FaBuysellads className='logo__icon' />\r\n          <span className='logo__name'>AD-Stack</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainLoader\r\n","import React, { useState, useEffect } from \"react\"\nimport \"./App.scss\"\nimport { useDispatch } from \"react-redux\"\nimport { setToken } from \"./redux/auth/authActions\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Routes from \"./components/Routes\"\nimport MainLoader from \"./components/MainLoader\"\n\nfunction App() {\n  const [load, setLoad] = useState(true)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setToken())\n    setTimeout(() => {\n      setLoad(false)\n    }, 3000)\n  }, [dispatch])\n\n  if (load) {\n    return <MainLoader />\n  }\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  TOGGLE_DROPMENU_NAVBAR,\r\n  TOGGLE_AUTH_FORM_NAVBAR,\r\n  RESET_NAVBAR,\r\n  TOGGLE_POPUP_WARNING_NAVBAR,\r\n  TOGGLE_POPUP_IMAGE,\r\n} from \"./navbarTypes\"\r\n\r\nconst initialState = {\r\n  dropMenu: false,\r\n  authForm: false,\r\n  popupWarning: false,\r\n  popupImage: false,\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_DROPMENU_NAVBAR:\r\n      return {\r\n        dropMenu: !state.dropMenu,\r\n        authForm: false,\r\n        popupWarning: false,\r\n        popupImage: false,\r\n      }\r\n    case TOGGLE_AUTH_FORM_NAVBAR:\r\n      return {\r\n        dropMenu: false,\r\n        authForm: !state.authForm,\r\n        popupWarning: false,\r\n        popupImage: false,\r\n      }\r\n    case RESET_NAVBAR:\r\n      return {\r\n        dropMenu: false,\r\n        authForm: false,\r\n        popupWarning: false,\r\n        popupImage: false,\r\n      }\r\n    case TOGGLE_POPUP_WARNING_NAVBAR:\r\n      return {\r\n        dropMenu: false,\r\n        authForm: false,\r\n        popupWarning: !state.popupWarning,\r\n        popupImage: false,\r\n      }\r\n    case TOGGLE_POPUP_IMAGE:\r\n      return {\r\n        dropMenu: false,\r\n        authForm: false,\r\n        popupWarning: false,\r\n        popupImage: !state.popupImage,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default navbarReducer\r\n","import {\r\n  FETCH_START_AUTH,\r\n  FETCH_SUCCESS_AUTH,\r\n  FETCH_FAILURE_AUTH,\r\n  SET_TOKEN_AUTH,\r\n  SET_ERROR_AUTH,\r\n  CLEAR_SPECIFIC_ERROR_AUTH,\r\n  CLEAR_ERRORS_AUTH,\r\n  CLEAR_DATA_AUTH,\r\n  UPDATE_START_AUTH,\r\n  UPDATE_SUCCESS_AUTH,\r\n  UPDATE_FAILURE_AUTH,\r\n  UPDATE_AVATAR_AUTH,\r\n} from \"./authTypes\"\r\n\r\nconst initialState = {\r\n  load: false,\r\n  token: {},\r\n  error: [],\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START_AUTH:\r\n      return {\r\n        load: true,\r\n        token: {},\r\n        error: [],\r\n      }\r\n    case FETCH_SUCCESS_AUTH:\r\n      const { data } = action.payload\r\n      localStorage.setItem(\"auth\", JSON.stringify(data))\r\n      return {\r\n        load: false,\r\n        token: data,\r\n        error: [],\r\n      }\r\n    case FETCH_FAILURE_AUTH:\r\n      return {\r\n        load: false,\r\n        token: {},\r\n        error: action.payload,\r\n      }\r\n    case SET_ERROR_AUTH:\r\n      const { param } = action.payload\r\n      return {\r\n        ...state,\r\n        error: [...state.error, { param, msg: \"Fill this field!\" }],\r\n      }\r\n    case CLEAR_SPECIFIC_ERROR_AUTH:\r\n      return {\r\n        ...state,\r\n        error: state.error.map((err) => {\r\n          if (err.param === action.payload.param) {\r\n            err.msg = \"\"\r\n          }\r\n          return err\r\n        }),\r\n      }\r\n    case CLEAR_ERRORS_AUTH:\r\n      return {\r\n        ...state,\r\n        error: [],\r\n      }\r\n    case SET_TOKEN_AUTH:\r\n      const auth = localStorage.getItem(\"auth\")\r\n      if (!auth) {\r\n        return state\r\n      }\r\n      return {\r\n        ...state,\r\n        token: JSON.parse(auth),\r\n      }\r\n    case CLEAR_DATA_AUTH:\r\n      localStorage.removeItem(\"auth\")\r\n      return {\r\n        ...state,\r\n        token: {},\r\n      }\r\n    case UPDATE_START_AUTH:\r\n      return {\r\n        ...state,\r\n        load: true,\r\n      }\r\n    case UPDATE_SUCCESS_AUTH:\r\n      const token = { ...state.token, user: action.payload.data }\r\n      localStorage.setItem(\"auth\", JSON.stringify(token))\r\n      return {\r\n        error: [],\r\n        load: false,\r\n        token,\r\n      }\r\n    case UPDATE_FAILURE_AUTH:\r\n      return {\r\n        ...state,\r\n        load: false,\r\n        error: action.payload,\r\n      }\r\n    case UPDATE_AVATAR_AUTH:\r\n      const tokenNew = {\r\n        ...state.token,\r\n        user: { ...state.token.user, ava: action.payload.data },\r\n      }\r\n      localStorage.setItem(\"auth\", JSON.stringify(tokenNew))\r\n      return {\r\n        ...state,\r\n        token: tokenNew,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import { SET_TEXT_SEARCH } from \"./searchTypes\"\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TEXT_SEARCH:\r\n      return {\r\n        text: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default searchReducer\r\n","import {\r\n  FETCH_SUCCESS_MARKS,\r\n  ADD_BOOKMARK_MARKS,\r\n  REMOVE_BOOKMARK_MARKS,\r\n} from \"./bookmarksTypes\"\r\n\r\nconst initialState = {\r\n  bookmarks: [],\r\n}\r\n\r\nconst bookmarksReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SUCCESS_MARKS:\r\n      return {\r\n        bookmarks: action.payload.data,\r\n      }\r\n    case ADD_BOOKMARK_MARKS:\r\n      return {\r\n        bookmarks: [...state.bookmarks, action.payload],\r\n      }\r\n    case REMOVE_BOOKMARK_MARKS:\r\n      return {\r\n        bookmarks: state.bookmarks.filter(\r\n          (item) => item._id !== action.payload\r\n        ),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default bookmarksReducer\r\n","import { combineReducers } from \"redux\"\r\nimport navbarReducer from \"./navbar/navbarReducer\"\r\nimport authReducer from \"./auth/authReducer\"\r\nimport searchReducer from \"./search/searchReducer\"\r\nimport bookmarksReducer from \"./bookmarks/bookmarksReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  navbar: navbarReducer,\r\n  search: searchReducer,\r\n  bkmarks: bookmarksReducer,\r\n})\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./rootReducer\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}